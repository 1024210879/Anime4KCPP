#define RELU(x) fmax(x, 0.0f)

__constant sampler_t samplerN = CLK_NORMALIZED_COORDS_FALSE | CLK_ADDRESS_CLAMP | CLK_FILTER_NEAREST;

__constant float kernelsL1[9 * 8] = 
{
-6.6444e-02, -2.2293e-01,  4.3874e-02,
 1.6922e-02, -6.8296e-01, -1.5910e-01,
 6.7607e-01,  3.2211e-01,  8.3825e-02,
-4.6628e-01, -6.8774e-02,  5.3469e-01,
-5.0927e-01,  7.0433e-02,  4.5642e-01,
-2.3189e-02,  3.5387e-02, -1.8559e-02,
-2.0223e-01,  4.7525e-02, -2.2261e-01,
 5.4403e-02,  7.0808e-01,  9.2090e-02,
-2.8478e-01, -1.9889e-02, -7.0991e-02,
 4.8378e-02, -9.3281e-02,  2.6368e-03,
 3.4669e-01,  7.2786e-02,  1.6626e-01,
 3.2117e-01,  3.2938e-01, -9.8396e-02,
 1.2761e-02,  2.0483e-01, -1.8375e-02,
 6.1438e-02,  8.3592e-01,  1.4112e-01,
-9.1790e-01, -2.4534e-01, -4.5670e-02,
-5.2576e-02,  4.3175e-01,  1.7042e-01,
 2.6664e-01,  5.5261e-01,  3.5812e-03,
 5.3634e-02, -4.6883e-02, -2.6455e-02,
 1.5687e-01,  4.7334e-01,  2.5085e-03,
 1.7840e-02,  4.1368e-01,  1.3071e-02,
 4.6789e-02,  1.0264e-01,  1.0549e-02,
-3.4509e-02, -7.6401e-01, -9.7871e-02,
-1.4232e-01,  2.9510e-01,  6.6217e-01,
-5.9506e-04,  1.2616e-01, -6.4225e-02
};

__constant float biasL1[8] = 
{
-0.0257, -0.0225, -0.3014, -0.2577, -0.0315, -0.0053, -0.7778,  0.0228
};

__constant float kernelsL[8][9 * 8 * 8] = 
{
{
-7.8588e-41, -5.0770e-40, -2.3334e-40,
 5.7174e-40,  6.9060e-41,  2.2264e-40,
-4.1631e-40,  4.5667e-40, -1.8115e-40,
-3.1000e-40,  3.1019e-40,  5.5423e-40,
-5.8518e-40,  2.1290e-40, -5.4579e-40,
-3.7753e-40,  6.3749e-40, -1.7875e-40,
 4.2296e-40,  6.3138e-40,  1.4976e-40,
-6.9417e-40, -6.7681e-40, -5.9818e-40,
 3.2053e-40,  3.0821e-40,  5.1321e-40,
-1.1793e-13, -1.6966e-13, -1.6465e-13,
-1.1177e-13, -1.5462e-13, -1.5181e-13,
-8.0184e-14, -1.0260e-13, -1.0028e-13,
 5.9355e-40,  2.4052e-40, -1.0027e-40,
 2.2060e-40,  3.4864e-40, -5.7403e-40,
 4.6936e-40, -3.3951e-40, -4.7715e-40,
-4.3438e-07, -4.5829e-07, -4.2651e-07,
-4.6938e-07, -4.9560e-07, -4.5764e-07,
-4.5213e-07, -4.7381e-07, -4.3802e-07,
-4.6194e-26, -1.0317e-25, -7.9411e-26,
-6.5741e-26, -1.6796e-25, -1.3656e-25,
-4.6399e-26, -1.1875e-25, -9.6259e-26,
 4.2124e-40,  2.5024e-40,  4.5312e-40,
-2.4880e-40,  2.9838e-41, -2.7215e-41,
-2.6347e-40,  1.5950e-40,  9.3734e-41,
-1.5004e-01, -1.0376e-01,  3.1248e-02,
 1.5256e-02, -1.6772e-01, -8.6500e-02,
 5.0217e-02, -2.9619e-02, -1.1343e-01,
-3.4530e-02, -2.5162e-02, -1.8981e-02,
 3.0999e-02,  4.9583e-02, -1.3314e-01,
-8.0518e-03, -9.8829e-03, -4.9034e-02,
-6.5426e-02, -2.6032e-02,  1.9869e-02,
-4.0711e-02,  3.6935e-02,  3.1968e-02,
-5.6236e-02,  2.3972e-02,  3.1233e-02,
-3.2789e-02,  1.2350e-01,  2.5228e-02,
 1.7996e-02,  1.7222e-01,  4.1160e-02,
 9.6771e-03, -6.9245e-02, -1.0607e-01,
 4.8283e-02, -2.2491e-04, -1.4890e-02,
-2.2983e-02,  1.0012e-01,  1.4748e-02,
 3.5048e-02,  1.4723e-01,  7.9790e-02,
-4.3297e-02, -3.8592e-02, -1.9111e-01,
-3.1038e-02,  1.0863e-01, -5.1866e-02,
 8.1257e-02,  2.5826e-01, -9.6486e-02,
-1.1488e-01, -5.2721e-02, -2.7971e-02,
 6.8810e-02,  2.4044e-01,  2.0929e-01,
 2.8720e-02,  2.7838e-01,  2.1926e-01,
-1.5294e-02,  9.4736e-03, -8.0263e-02,
 9.0466e-02,  1.0441e-01, -1.9199e-02,
-3.1957e-02, -1.3685e-02,  3.4920e-02,
 2.3357e-40, -1.4361e-40,  2.0498e-40,
-5.2355e-40, -6.0151e-40, -2.9264e-40,
 1.9715e-41,  5.9793e-41, -1.3675e-40,
 5.3771e-40,  6.3135e-40, -3.8471e-40,
-3.0820e-40, -1.7004e-40, -1.9371e-40,
-5.1159e-40,  7.3244e-41,  3.5861e-41,
 2.8441e-40,  4.5248e-41,  1.9771e-40,
-2.4681e-40,  3.6054e-40,  6.6909e-40,
-6.5048e-42, -1.6001e-40,  4.8243e-41,
-4.0980e-05, -4.0053e-05, -3.8910e-05,
-4.2248e-05, -4.1314e-05, -4.0025e-05,
-4.2286e-05, -4.1548e-05, -4.0332e-05,
-2.8779e-39, -1.6319e-39,  5.3537e-40,
-9.3326e-37, -2.0208e-38,  3.5144e-40,
-1.1447e-33, -8.3919e-36, -2.6811e-39,
-4.9958e-04, -4.9007e-04, -4.8415e-04,
-4.9768e-04, -4.8710e-04, -4.8079e-04,
-4.9853e-04, -4.8814e-04, -4.8153e-04,
-2.7201e-08, -2.6325e-08, -2.5092e-08,
-2.8995e-08, -2.8472e-08, -2.6939e-08,
-3.0365e-08, -3.0438e-08, -2.8963e-08,
-2.2349e-22, -4.7941e-22, -8.4161e-22,
-1.0756e-22, -2.6231e-22, -5.0285e-22,
-9.5473e-24, -2.4576e-23, -4.5888e-23,
 5.1454e-03, -1.2210e-02,  1.6146e-01,
 6.7796e-02, -7.0563e-02,  1.7380e-01,
 1.7889e-03,  1.0884e-01, -3.5576e-02,
 5.2346e-02, -1.2711e-03,  5.0453e-02,
-6.9097e-02, -1.8827e-01, -1.6298e-01,
-2.6728e-02,  2.2278e-02,  6.2331e-02,
 1.3323e-02,  3.2935e-02,  4.7271e-02,
 4.4643e-02,  5.5947e-02,  1.2718e-02,
 4.1900e-02,  1.1954e-01,  6.4866e-02,
-7.3567e-02,  1.4508e-02,  9.6110e-02,
 4.3218e-02, -3.5009e-02,  1.3649e-01,
-2.0859e-01, -2.2406e-02, -8.6696e-02,
-6.5764e-02,  1.3745e-01, -9.7721e-02,
 3.6731e-02,  5.4085e-02,  1.1680e-01,
-1.2129e-01,  3.6003e-02,  7.5118e-02,
-3.4376e-02,  7.8322e-03,  2.5604e-02,
-9.8933e-03,  1.6758e-01,  1.2873e-01,
 3.1844e-02,  1.2159e-01, -1.1357e-02,
-7.1064e-02,  5.5140e-02, -5.0246e-02,
-8.3429e-02,  1.0869e-01,  1.3256e-01,
 2.8566e-02, -1.2673e-02,  8.9002e-02,
-3.1454e-02, -1.1207e-02,  1.0039e-02,
 1.2219e-01, -5.8559e-02,  5.7227e-02,
-5.1164e-02, -6.6645e-02, -7.3296e-02,
-7.7695e-02,  1.3922e-01,  1.1215e-01,
-3.2853e-02, -2.1474e-01, -1.1947e-01,
-1.6117e-02,  1.0425e-01, -8.7792e-02,
-2.0134e-02,  6.1399e-02, -2.5766e-02,
 6.2076e-02, -5.1526e-03, -9.9852e-03,
 6.5683e-02, -5.9467e-02, -5.4961e-02,
 9.6568e-02,  1.7501e-01,  4.7065e-03,
 1.9172e-01,  3.9761e-01,  1.2891e-01,
-6.9445e-02,  4.9033e-02, -3.3822e-02,
 1.1595e-01,  1.3398e-01,  2.9149e-01,
 1.0400e-02,  1.1222e-01,  1.7571e-01,
-1.7876e-02,  8.4856e-02,  5.0042e-02,
-3.8303e-02, -1.3064e-01, -1.1230e-01,
 1.8216e-01,  2.2923e-01, -1.6452e-01,
 4.5320e-02,  1.4885e-01, -8.6931e-02,
 6.9034e-04,  6.8016e-02, -3.3078e-03,
 1.7704e-01,  1.8429e-01,  2.2300e-01,
 1.2586e-01,  1.7702e-01,  1.5963e-01,
 6.0440e-02,  1.6309e-01,  1.4360e-01,
 2.2281e-01,  4.0980e-01,  3.1503e-01,
 1.9845e-01,  4.3088e-01,  3.0545e-01,
 1.2269e-01, -1.0935e-02,  5.9756e-03,
 1.5467e-02, -6.8641e-02,  5.1025e-02,
 5.3248e-02, -1.5389e-01, -1.0545e-02,
-8.6541e-02, -1.0240e-01,  3.2376e-02,
 4.0513e-02, -1.2597e-01, -5.5172e-01,
 8.8075e-02,  3.5842e-02, -1.5526e-01,
 3.6307e-03,  6.7334e-02,  1.0706e-01,
-2.7607e-02, -1.7590e-01, -3.5723e-01,
 2.5388e-02, -5.6200e-01, -5.9087e-01,
-9.3537e-02, -7.3637e-02, -3.5255e-02,
 9.7876e-03, -5.5830e-02, -4.7930e-02,
-7.5248e-02, -1.1652e-01, -7.1505e-02,
 9.1701e-03, -1.1749e-01,  4.7015e-02,
 1.9896e-02, -3.9479e-02,  1.3392e-02,
 4.2104e-02, -5.2126e-02, -1.2225e-01,
 2.4038e-02,  5.2750e-02, -2.4935e-01,
-4.2536e-02, -2.2382e-01, -4.0476e-01,
-3.5332e-02,  2.0007e-01, -1.5788e-01,
 1.3196e-01, -1.0514e-01, -6.7311e-02,
-2.5254e-01,  1.1143e-02,  2.5564e-01,
-3.3875e-01,  3.2018e-02,  5.9422e-01,
 4.0873e-02,  4.6350e-03, -1.9309e-02,
-6.7106e-02, -1.5509e-01, -3.0540e-02,
 8.9450e-02, -4.5764e-02,  6.9062e-02,
 8.6334e-02,  3.6184e-02, -1.9751e-02,
 4.6186e-02, -4.7738e-02,  1.0071e-01,
-2.5667e-01, -2.7710e-01,  6.2212e-02,
-7.3232e-02, -2.4296e-03,  9.5984e-02,
 2.2962e-02, -2.7861e-01,  1.4466e-01,
 1.4438e-02, -4.6571e-02,  9.9716e-02,
 1.4309e-02,  1.5547e-01,  1.5798e-01,
 6.2034e-02,  2.4734e-02, -1.2728e-02,
 1.3093e-01,  2.0641e-01,  1.0088e-01,
 1.4809e-02,  5.8048e-02, -1.8589e-02,
 2.1144e-01,  3.2701e-01,  4.4199e-02,
-6.2928e-02, -1.1757e-01, -1.1268e-01,
 7.3304e-04,  6.5775e-02, -1.8233e-01,
 1.3999e-01, -2.1044e-02,  8.6909e-02,
-4.0005e-02,  8.2727e-02, -1.0482e-01,
 4.4236e-02, -7.0033e-02,  1.6908e-01,
 2.7376e-02,  5.3112e-01,  2.4331e-01,
 1.4189e-03,  4.0125e-02,  7.0927e-03,
-3.5087e-02, -3.1060e-03, -2.2590e-01,
 1.2457e-01,  7.1812e-01, -4.1704e-01,
 7.5948e-02,  2.5947e-02, -2.8636e-01,
-7.7623e-02, -7.1195e-03, -5.6543e-02,
 8.0959e-02,  1.0478e-01,  7.5120e-03,
 2.2232e-02,  3.6463e-02, -1.1633e-01,
-1.1589e-01, -7.5466e-02,  1.3308e-02,
-2.9322e-01,  2.6201e-01, -2.3559e-02,
 1.2823e-01,  1.4328e-01, -9.0222e-02,
 3.0891e-02,  2.0511e-01,  1.9541e-02,
-7.8176e-02, -3.9327e-01, -1.5256e-01,
-5.4170e-02, -8.6919e-02, -5.4076e-02,
 7.0987e-02,  1.5289e-01, -8.9628e-03,
 2.0048e-02,  1.2123e-01, -7.0541e-02,
-1.0131e-02, -1.8656e-01, -9.7144e-02,
-6.4399e-02,  6.8395e-02, -4.9178e-02,
-8.8638e-03,  2.4169e-01,  6.0722e-02,
 3.6711e-02,  7.6478e-02,  1.7409e-02,
-5.2405e-02, -1.8927e-01, -1.1216e-01,
 3.2132e-01, -9.7989e-02,  1.4725e-01,
 8.7974e-02, -5.0940e-03, -2.7328e-03,
-9.1506e-03,  2.8101e-01, -1.5744e-01,
 4.7673e-02,  4.5162e-01, -1.6169e-01,
 5.8889e-02,  6.2325e-02, -2.7162e-02,
 2.0585e-01, -7.2349e-02,  2.2928e-02,
-3.5594e-01,  1.3201e-01, -7.5672e-02,
 3.9579e-02,  1.7996e-01, -1.1810e-01,
-4.6218e-02,  1.3432e-02,  2.7698e-02,
-1.9967e-01, -1.6724e-02,  1.1840e-02,
 1.2047e-02,  1.2665e-01,  6.9015e-02,
 2.0847e-01,  1.7427e-01,  6.9773e-02,
 5.5169e-01,  4.6981e-01,  1.8463e-01,
 2.2691e-01,  2.4360e-01,  1.3134e-01
}
,
{
-2.3228e-08, -2.3990e-08, -2.2220e-08,
-2.4225e-08, -2.5279e-08, -2.3452e-08,
-2.2305e-08, -2.3157e-08, -2.1818e-08,
 5.9433e-02,  1.0188e-01, -1.0479e-01,
 6.9514e-02,  1.2920e-01,  1.1508e-01,
-1.5732e-01,  9.6889e-03, -9.0008e-02,
 3.9038e-04,  3.9895e-04,  4.0370e-04,
 4.0191e-04,  4.1090e-04,  4.1473e-04,
 4.0100e-04,  4.0987e-04,  4.1231e-04,
 2.9557e-02,  5.4669e-02, -1.2058e-01,
 5.8595e-02,  2.2284e-01,  1.1189e-01,
-9.5949e-02,  8.3365e-02, -6.5673e-02,
 1.2033e-01,  1.9798e-01,  7.7711e-02,
 6.7254e-02,  3.6557e-01,  1.3817e-01,
 6.0975e-02,  4.6367e-02,  2.3762e-01,
-2.1251e-02, -2.0232e-02,  9.3753e-02,
-4.7032e-02, -1.5910e-01,  8.8088e-02,
-5.6709e-02, -1.7148e-01, -1.0498e-01,
-2.5535e-01,  1.6090e-01, -3.3798e-02,
-2.3176e-01,  5.4080e-01,  1.0018e-01,
-2.1621e-01, -6.8913e-03, -1.0708e-01,
-4.8733e-02,  2.5122e-01,  4.7934e-02,
 9.7404e-02,  5.5062e-01, -3.4611e-01,
 1.2906e-02, -1.3565e-01, -4.1943e-01,
-2.1359e-40, -1.4250e-40, -4.7123e-40,
-5.9433e-41,  1.9903e-41, -1.7701e-40,
-5.9941e-40, -5.8562e-40, -5.0226e-40,
-2.6581e-40,  1.3006e-40, -1.4201e-40,
 5.4264e-40,  2.3848e-40,  5.6412e-40,
-2.6378e-41, -5.7132e-40, -4.1343e-40,
-1.4587e-18, -1.6296e-18, -1.5164e-18,
-1.5889e-18, -1.7513e-18, -1.5982e-18,
-1.3861e-18, -1.5234e-18, -1.3620e-18,
-4.6733e-05, -4.6204e-05, -4.5817e-05,
-4.8078e-05, -4.7339e-05, -4.6623e-05,
-4.6842e-05, -4.6282e-05, -4.6050e-05,
-6.3486e-04, -6.2825e-04, -6.1269e-04,
-6.4546e-04, -6.3850e-04, -6.2347e-04,
-6.3480e-04, -6.3132e-04, -6.2091e-04,
 5.6433e-41, -3.0514e-40, -5.4526e-40,
 1.1125e-41,  2.9485e-40,  5.5282e-40,
 3.0229e-40,  1.5915e-40,  5.3759e-40,
-2.7153e-23, -4.1024e-22, -1.0792e-21,
-4.1670e-21, -4.5690e-20, -8.6652e-20,
-1.9427e-20, -1.9699e-19, -3.1310e-19,
-3.6239e-32, -1.4640e-33, -2.6379e-36,
-1.7577e-33, -4.6667e-35, -1.8886e-37,
-2.0268e-35, -7.6870e-37, -9.7433e-39,
-6.6958e-40, -3.9935e-40,  2.4649e-40,
 2.0207e-40, -3.0245e-40, -7.1986e-41,
 6.2938e-40, -3.6922e-40,  1.5296e-40,
-6.4982e-41,  5.0849e-41,  5.7873e-40,
 1.4327e-40, -4.2163e-40,  1.3807e-40,
 2.8569e-40,  1.9139e-40,  6.7548e-40,
-5.4410e-40,  7.9929e-40,  8.1660e-40,
-1.5964e-40, -8.0302e-40,  5.6766e-40,
 2.2533e-42, -7.6865e-40, -5.5822e-40,
 5.7249e-40,  5.3555e-40, -4.9107e-41,
 1.7538e-40, -1.2312e-40,  5.0077e-40,
 6.1500e-40,  1.9980e-40,  6.2953e-40,
-3.3445e-19, -4.1876e-19, -3.1682e-19,
-3.7809e-19, -4.9901e-19, -4.0179e-19,
-2.7550e-19, -3.7827e-19, -3.2425e-19,
 5.0613e-40,  1.5224e-40, -1.8977e-40,
 2.4108e-41, -5.1771e-40,  6.2317e-40,
 1.0465e-40,  2.8816e-41,  6.2500e-40,
 6.4133e-40,  4.2717e-40, -3.5900e-40,
-4.4831e-40,  6.5942e-40, -4.8293e-40,
-2.4133e-40,  3.1140e-40, -2.0777e-40,
-2.2906e-41,  6.3887e-40, -4.4443e-40,
-4.6615e-40, -2.1123e-40,  4.5700e-40,
-4.6360e-40, -6.3728e-40, -6.5868e-40,
-3.6575e-40, -6.4153e-40, -3.0530e-41,
 4.2531e-40, -1.2255e-40, -3.9607e-40,
 6.3907e-40, -5.4630e-40, -3.1460e-40,
 2.8820e-40,  4.9460e-40,  6.1461e-40,
 8.9118e-41, -4.6579e-40, -2.4172e-40,
-5.5474e-40, -8.1848e-41, -1.6910e-40,
-7.2263e-22, -8.3496e-22, -7.6511e-22,
-7.9268e-22, -9.0319e-22, -8.0980e-22,
-6.5344e-22, -7.4309e-22, -6.5194e-22,
-2.3308e-05, -2.3861e-05, -2.3933e-05,
-2.4601e-05, -2.5034e-05, -2.4702e-05,
-2.4329e-05, -2.4578e-05, -2.4070e-05,
-8.6303e-04, -8.6301e-04, -8.5264e-04,
-8.7934e-04, -8.7528e-04, -8.6090e-04,
-8.7896e-04, -8.7340e-04, -8.5532e-04,
-4.5042e-40,  2.6725e-40,  2.3181e-40,
-4.6274e-41, -1.1799e-40,  5.0685e-40,
-1.0765e-40,  3.3322e-40, -6.1905e-40,
-6.0632e-31, -1.5405e-29, -5.1414e-29,
-6.4145e-28, -9.7678e-27, -2.1612e-26,
-5.7576e-27, -8.9655e-26, -1.5082e-25,
-2.5057e-40,  7.2876e-41,  4.5731e-41,
-1.6525e-40,  5.0987e-40, -5.4683e-40,
 8.1836e-41,  6.2722e-40, -3.1057e-40,
 4.0987e-40,  3.5941e-40,  5.1680e-40,
 5.5563e-40,  3.1011e-40,  4.7068e-40,
 1.0426e-40, -1.0803e-40,  4.4867e-40,
-4.2341e-03,  1.5491e-01, -2.2148e-03,
-6.1977e-02,  2.0283e-01,  1.9561e-01,
 4.0616e-02,  1.6947e-01, -2.5971e-02,
 4.8134e-27,  8.2637e-27,  5.0563e-27,
 6.6005e-26,  8.6249e-26,  5.1686e-26,
 7.7732e-26,  9.8483e-26,  6.0524e-26,
 6.6783e-02,  6.8246e-02,  2.2906e-01,
-9.9780e-02,  7.8602e-02, -1.7383e-01,
-1.4780e-01,  1.0959e-01,  1.4324e-01,
-2.5950e-02, -2.7116e-02, -9.2170e-02,
 5.3424e-02,  9.2268e-02, -2.2852e-02,
-3.0577e-02,  5.9876e-02,  9.9966e-02,
-2.3211e-01, -1.3794e-01,  2.8721e-01,
-3.2479e-01, -2.6648e-01,  6.1669e-02,
 1.8940e-01,  4.8185e-02, -2.3550e-01,
 2.8471e-02, -1.2107e-01, -1.5591e-01,
-1.1998e-01,  5.2118e-01,  2.0335e-01,
-1.2343e-01,  1.0231e-01,  6.2664e-02,
-3.9162e-02, -9.1932e-02, -1.8909e-01,
 1.1345e-01,  5.7301e-01, -1.8074e-01,
-3.4684e-02, -2.1132e-01, -2.1975e-01,
 1.7543e-39, -3.4709e-40,  6.2940e-40,
-2.2134e-41, -3.6133e-40, -2.7075e-40,
-5.9664e-40, -2.3937e-40,  3.0876e-40,
 9.1814e-41,  9.5898e-41, -6.8908e-40,
 6.9916e-40,  2.7935e-40,  1.7966e-40,
-2.3967e-40,  4.0806e-40,  6.2012e-40,
-2.1016e-39, -1.9401e-39,  1.6943e-39,
-2.1198e-39,  1.7341e-39,  1.0160e-39,
-1.6996e-39,  2.0917e-39,  1.0378e-39,
-9.7756e-41,  2.7978e-40, -5.0791e-40,
-3.4321e-40, -7.0774e-41, -5.2651e-40,
 2.8034e-40, -3.3452e-40,  1.9535e-40,
-6.2300e-40, -8.5804e-40, -1.9038e-40,
-5.6564e-40, -6.1257e-40, -1.0338e-40,
-1.7191e-41, -1.2843e-41,  5.0707e-40,
-4.4587e-40,  2.7128e-40, -1.4155e-40,
-5.7475e-40, -6.5500e-40, -4.7424e-40,
 1.7235e-40, -6.0028e-40, -1.6342e-40,
-5.1072e-40, -2.4721e-40, -2.8477e-41,
 2.6598e-40, -4.4078e-40,  4.1763e-40,
-3.3947e-40, -5.5626e-40,  4.9713e-40,
 2.1733e-40, -2.9024e-40, -4.5514e-42,
-3.4873e-40, -1.0737e-40, -1.4297e-40,
 2.8514e-40,  7.5916e-40,  2.2827e-40,
 3.8908e-40, -4.2140e-40,  6.1433e-40,
-4.7825e-40, -3.0140e-40, -5.9563e-40,
 1.5280e-40,  2.6156e-40,  5.0361e-40,
 1.9478e-01,  2.3088e-01, -3.5943e-02,
 1.6791e-01, -1.8740e-02, -2.0454e-01,
 9.8125e-02, -6.9150e-02, -4.0988e-02,
-2.6313e-11, -2.9945e-11, -3.6355e-11,
-2.5468e-11, -2.9706e-11, -3.9893e-11,
-3.7350e-11, -4.7211e-11, -7.0822e-11,
 8.9952e-02,  6.8024e-02,  6.8061e-02,
 7.4208e-03, -8.6107e-02,  1.1549e-01,
-1.0157e-01,  1.5224e-01,  4.1973e-02,
 1.0130e-01,  1.0320e-01, -7.9211e-02,
 2.0842e-01,  1.7578e-01, -7.1475e-02,
-1.4212e-01, -3.8945e-02, -2.7511e-01,
 2.2116e-01, -6.3049e-02, -7.4146e-02,
-3.2359e-01,  6.5626e-02,  1.1042e-01,
 7.1619e-02, -1.7027e-01,  5.8008e-02,
-1.4787e-01, -2.0816e-01, -8.7404e-02,
-2.7163e-01,  5.7729e-01,  1.6102e-02,
-7.1720e-02,  1.2918e-01, -1.0514e-01,
-8.6943e-02,  3.8404e-02,  1.8243e-01,
 1.7560e-01,  3.8299e-01,  3.4889e-02,
 6.0014e-02, -1.6827e-03,  5.1467e-01,
-2.2651e-14, -2.4885e-14, -2.6078e-14,
-2.6161e-14, -2.5925e-14, -2.5007e-14,
-2.3357e-14, -2.3019e-14, -2.0561e-14,
 6.6309e-02,  2.1031e-02, -1.0374e-01,
 2.2336e-03,  2.0105e-01, -9.0405e-03,
-9.0985e-02, -1.1671e-01, -1.6309e-02,
 6.6389e-05,  6.5975e-05,  6.6718e-05,
 6.8908e-05,  6.8170e-05,  6.8201e-05,
 7.2125e-05,  7.1255e-05,  7.0266e-05,
-1.7294e-01, -1.2234e-01, -5.0848e-02,
-3.4702e-02, -1.2433e-01,  8.8317e-03,
-7.4894e-02, -1.1316e-01,  2.2855e-03,
 8.5116e-02,  4.2196e-02, -5.0224e-02,
 1.2854e-01,  1.9671e-01,  1.0569e-01,
-1.0097e-01,  6.2852e-02,  8.8960e-02,
 3.4823e-01,  5.4396e-01, -2.2363e-01,
 5.1724e-01,  5.7095e-01, -6.7593e-02,
-3.5834e-02,  1.0596e-01, -2.3007e-01,
-1.5568e-01, -6.1368e-03,  4.7717e-02,
-1.3284e-01,  2.8156e-01, -1.1676e-02,
-3.6141e-02, -6.8803e-02, -1.3188e-02,
 1.1679e-02,  1.2175e-01, -1.3512e-02,
 9.2292e-02, -6.4212e-02, -1.6618e-01,
 1.9408e-01, -1.5273e-01, -8.3138e-02
}
,
{
-5.0529e-03, -5.0816e-03, -4.9826e-03,
-5.1735e-03, -5.1934e-03, -5.0781e-03,
-5.1344e-03, -5.1473e-03, -5.0280e-03,
 2.8622e-41, -1.2033e-41,  1.2609e-40,
-4.9379e-40, -5.1047e-40,  5.5085e-41,
-4.7002e-40, -5.0136e-40, -4.5629e-40,
-5.1095e-40,  1.8741e-40,  1.8435e-40,
 4.1851e-40, -8.9558e-41, -9.6681e-41,
-1.8244e-40,  2.7992e-40,  1.8116e-40,
 2.8655e-40, -3.0193e-40,  8.0916e-40,
-1.2974e-39,  3.3049e-40,  6.9542e-41,
-3.3329e-40,  4.2212e-40, -1.3453e-40,
-3.7526e-11, -4.9289e-11, -4.1821e-11,
-4.3866e-11, -5.2258e-11, -4.2132e-11,
-3.0111e-11, -3.3111e-11, -2.5767e-11,
 6.0452e-40,  6.9262e-41,  2.9300e-40,
-6.1511e-40, -4.1269e-40,  4.4012e-40,
 1.0860e-39, -2.9020e-40, -4.5529e-40,
-5.4574e-19, -6.2048e-18, -2.4733e-17,
-7.9285e-18, -7.8793e-17, -2.5201e-16,
-3.0424e-17, -2.7690e-16, -7.1956e-16,
-6.3341e-04, -6.4536e-04, -6.1857e-04,
-6.6643e-04, -6.8061e-04, -6.5019e-04,
-6.5324e-04, -6.6813e-04, -6.3939e-04,
-1.4480e-02, -1.1904e-01, -1.8555e-02,
-3.0013e-03,  2.1761e-01,  3.0322e-02,
 1.4337e-01,  3.5242e-02, -1.0355e-02,
-1.8517e-08, -2.1669e-08, -2.8434e-08,
-1.0289e-08, -1.2380e-08, -1.6553e-08,
-7.1840e-09, -8.8908e-09, -1.1741e-08,
-5.9514e-40, -4.4339e-40, -3.0315e-40,
 3.5756e-40,  2.5390e-40, -1.2253e-40,
 2.1417e-40,  4.0569e-40,  5.3962e-40,
-2.4791e-09, -3.0432e-09, -4.1515e-09,
-1.2951e-09, -1.6413e-09, -2.2729e-09,
-8.3058e-10, -1.0986e-09, -1.5107e-09,
-2.7166e-01, -4.5113e-01,  2.5916e-02,
-8.0217e-02,  5.0732e-01, -7.9285e-02,
-3.7216e-02, -6.0969e-03, -3.9797e-01,
 1.8705e-39,  1.8064e-39,  1.0486e-39,
 2.1538e-39,  1.7290e-39,  1.2229e-39,
 1.5448e-39,  2.0811e-39,  2.0965e-39,
 4.2106e-01, -1.5795e-02, -6.5534e-02,
-2.5237e-02,  5.6213e-01,  1.6966e-01,
-1.9723e-05,  1.8912e-01, -5.9164e-02,
-3.0686e-01, -1.7284e-01, -8.6658e-02,
-1.6788e-01,  1.8817e-02, -1.7066e-01,
 8.5936e-02,  3.0021e-01, -7.6131e-02,
 1.1691e-02,  1.0680e-01, -5.1996e-02,
-1.2783e-01,  4.2631e-01,  4.9520e-02,
-2.8305e-01, -1.3444e-01, -7.4049e-02,
-7.5661e-12, -4.9543e-12, -3.2589e-12,
-1.1702e-11, -7.2095e-12, -4.7065e-12,
-3.4576e-11, -2.0863e-11, -1.3336e-11,
-3.0246e-40, -4.1596e-40,  2.9013e-40,
 8.5195e-41, -2.2396e-40, -2.0322e-40,
-5.6200e-40,  2.4820e-40,  3.1309e-40,
-1.4132e-13, -7.3651e-14, -3.9353e-14,
-2.6604e-13, -1.3239e-13, -7.1614e-14,
-1.0840e-12, -5.5694e-13, -3.0138e-13,
 1.5892e-01, -1.4218e-01, -6.0966e-02,
 6.0029e-02,  3.4569e-01,  1.4269e-01,
 5.2811e-02, -1.8327e-01, -6.8749e-02,
 1.1844e-39,  5.9969e-40,  5.9290e-40,
 2.0585e-39,  2.1604e-39,  5.3120e-40,
 1.3612e-40,  1.6946e-39, -9.5433e-40,
-1.1555e-01, -1.2147e-02,  2.5986e-02,
-8.0523e-02,  2.9810e-01,  1.9044e-01,
 2.0375e-02,  1.9450e-03, -1.2702e-01,
-6.6233e-02, -3.5716e-02, -5.6364e-02,
 9.6167e-02,  2.2097e-02,  2.0502e-01,
 9.7640e-03,  7.6339e-03,  3.8114e-02,
 4.9251e-03,  2.1334e-01,  3.8940e-03,
 3.5709e-01,  4.6886e-02,  2.5348e-01,
 4.1790e-02,  1.7924e-01,  3.2425e-02,
-1.1825e-17, -3.4268e-18, -2.1798e-18,
-6.3593e-18, -1.2050e-18, -5.6450e-19,
-8.7252e-18, -1.5175e-18, -6.1706e-19,
-2.2836e-40,  6.8665e-40, -4.4396e-40,
 7.2465e-40,  6.0866e-40,  3.7804e-40,
-7.0432e-40, -2.4897e-40,  4.9891e-40,
-8.4177e-25, -1.5540e-25, -5.7348e-26,
-2.1199e-25, -1.5637e-26, -2.8422e-27,
-3.6818e-25, -1.4074e-26, -1.6391e-27,
-9.3870e-02,  1.5105e-01,  1.0805e-01,
 2.6058e-01, -6.6897e-01,  2.3624e-01,
 1.5015e-01,  1.9154e-01,  8.7674e-02,
 2.0175e-39, -2.0987e-39,  1.7775e-39,
 1.0741e-39,  1.8467e-39,  1.4887e-39,
 1.4505e-39, -1.2996e-39,  4.8221e-41,
 7.9016e-02,  1.6261e-01,  8.0809e-02,
 3.2329e-01, -2.6142e-01, -9.0138e-02,
-7.3671e-02,  1.5635e-02, -8.1942e-02,
-2.1593e-01, -4.4600e-01, -4.4737e-02,
-3.9393e-01, -8.2354e-01, -7.0635e-01,
-6.8438e-03, -4.9690e-01, -1.4217e-01,
-1.1410e-03, -1.1270e-03, -1.0762e-03,
-1.1528e-03, -1.1454e-03, -1.0935e-03,
-1.1389e-03, -1.1334e-03, -1.0880e-03,
-2.1073e-25, -1.9937e-25, -1.1264e-25,
-2.4988e-25, -2.4142e-25, -1.3712e-25,
-1.9454e-25, -1.8992e-25, -1.0912e-25,
 3.8855e-40,  3.5152e-40, -4.8707e-40,
-2.0638e-39, -1.7886e-40,  5.1970e-40,
 6.2864e-40, -1.8713e-39,  8.1025e-40,
-9.7454e-34, -8.5332e-34, -3.1646e-34,
-1.2075e-33, -1.1036e-33, -4.2669e-34,
-8.2178e-34, -7.6283e-34, -3.0038e-34,
-1.2906e-26, -1.3911e-26, -4.8299e-27,
-1.2183e-26, -1.6447e-26, -5.6935e-27,
-3.0565e-27, -4.3834e-27, -1.6844e-27,
 1.1669e-39, -1.0395e-39, -7.3436e-40,
 1.5164e-39,  2.0520e-39, -1.0345e-39,
-1.0656e-39, -1.7689e-39, -3.3205e-40,
-1.3650e-21, -3.6550e-20, -9.5258e-20,
-6.4257e-21, -2.0042e-19, -5.4076e-19,
-1.9025e-20, -5.8074e-19, -1.5963e-18,
-2.2849e-04, -2.2682e-04, -2.1358e-04,
-2.3154e-04, -2.3181e-04, -2.1866e-04,
-2.2647e-04, -2.2727e-04, -2.1545e-04,
-2.6015e-23, -3.9294e-23, -3.6037e-23,
-3.3012e-23, -5.3449e-23, -5.2884e-23,
-2.9312e-23, -4.7452e-23, -4.8001e-23,
-5.6355e-40, -2.3469e-40, -3.5885e-40,
-2.0755e-40,  2.0377e-40,  3.2259e-40,
-5.3947e-40,  4.2747e-41,  4.8967e-41,
-2.0698e-39, -1.7393e-39, -2.0473e-39,
 1.7147e-39,  1.7159e-39,  1.7959e-39,
 1.7962e-39,  1.7783e-39, -1.4223e-39,
-1.1702e-40, -2.3137e-41, -4.5405e-40,
-4.6797e-40,  6.5582e-41,  1.8111e-40,
 6.1477e-40, -1.6827e-40, -2.0288e-40,
-2.4220e-41,  4.7774e-40,  5.1050e-40,
-6.3227e-40,  5.6437e-41,  4.7749e-40,
-6.8037e-41, -5.5944e-41, -5.2248e-40,
-2.9382e-40, -1.1174e-39, -1.2855e-39,
-4.5290e-40, -5.2260e-41,  2.3726e-40,
 1.3281e-39, -7.9398e-40, -2.9736e-40,
-2.8081e-40, -5.2929e-40, -4.0786e-40,
-3.0303e-41,  3.1336e-40, -5.8450e-40,
-1.5091e-40, -2.7371e-40, -4.5927e-40,
-1.8429e-34, -3.0900e-34, -2.4399e-34,
-2.8078e-34, -5.1386e-34, -4.4337e-34,
-2.1799e-34, -4.0985e-34, -3.6000e-34,
-1.2997e-25, -1.9986e-25, -1.7715e-25,
-1.7099e-25, -2.8141e-25, -2.6652e-25,
-1.4549e-25, -2.4045e-25, -2.3009e-25,
 3.3692e-40,  1.0044e-40, -6.6821e-41,
 9.2910e-41,  6.2137e-40, -3.5625e-40,
 1.8601e-40,  3.1653e-40, -1.1506e-40,
-1.2388e-39,  1.8342e-39, -1.8294e-39,
 1.3807e-39,  1.3603e-39, -1.7869e-39,
-1.7227e-39, -1.7752e-39,  1.7258e-39,
-2.0721e-40, -6.3499e-40, -5.9485e-40,
 3.8843e-40, -6.0861e-41, -4.0542e-40,
-3.4308e-40, -4.2822e-40, -3.9605e-40,
-5.7429e-40,  4.9242e-40, -5.9141e-40,
 4.6267e-40, -2.4953e-40, -2.9300e-40,
 5.3466e-40, -5.2403e-40,  6.4802e-40,
-8.5894e-40,  2.9157e-40, -7.7367e-41,
-5.8922e-40,  3.2359e-40, -6.1293e-40,
 6.1138e-40, -1.3667e-39, -5.0657e-42,
 4.7910e-40, -1.4080e-40,  1.9220e-40,
-3.5670e-40,  3.4204e-40, -5.0215e-40,
 1.1877e-41,  2.3114e-40, -4.7794e-40,
-5.0255e-38, -9.0719e-38, -6.8319e-38,
-7.9126e-38, -1.5789e-37, -1.3023e-37,
-5.5680e-38, -1.1540e-37, -9.6620e-38,
 1.3756e-01,  1.8508e-01,  7.6456e-02,
 8.1960e-02,  3.3367e-01,  3.0120e-02,
-4.0177e-03,  2.0983e-01,  1.8836e-02,
 4.8694e-04,  5.1602e-04,  5.4896e-04,
 5.2765e-04,  5.5349e-04,  5.7725e-04,
 5.4815e-04,  5.6937e-04,  5.9273e-04,
-1.7150e-41, -2.4088e-41, -1.5593e-40,
 6.3817e-41,  4.8004e-41, -1.1053e-40,
-2.5225e-40, -2.7111e-40, -4.2970e-40,
 8.9238e-04,  9.0772e-04,  9.2404e-04,
 9.2361e-04,  9.3716e-04,  9.4715e-04,
 9.3736e-04,  9.4895e-04,  9.5734e-04,
 1.0472e-02,  1.5004e-01, -4.8637e-02,
 2.7297e-02,  1.9126e-01, -1.4059e-03,
-2.1728e-02, -1.5097e-01, -1.6049e-01,
 1.0667e-39, -1.0623e-39, -4.1857e-42,
-1.3507e-39,  1.1145e-39, -5.4341e-40,
-1.6960e-39, -1.9075e-39, -1.7366e-39,
-3.2926e-01, -2.5943e-01, -1.2990e-01,
-2.6478e-01,  3.2323e-01,  4.3230e-01,
-7.0801e-02,  1.9820e-01,  9.4808e-02,
-9.9595e-03,  7.4277e-02, -7.1363e-02,
 7.8027e-02,  1.5751e-01,  1.3305e-01,
-9.5237e-02,  1.1004e-01, -7.6579e-02
}
,
{
-5.5262e-40,  3.7699e-40, -1.4920e-40,
 4.0064e-40, -2.0632e-40, -4.4801e-41,
-3.6749e-40,  5.9043e-40, -1.5942e-40,
-5.9219e-42, -4.1286e-40, -1.6920e-40,
-2.5927e-40, -4.5458e-41,  2.0990e-40,
-4.6860e-40,  5.0483e-40,  2.8004e-40,
-4.0641e-40,  6.0770e-40, -3.8297e-42,
 5.7537e-40,  5.7772e-40, -1.0048e-40,
 1.5945e-40,  3.9582e-40, -2.6190e-40,
-5.1046e-40, -5.5028e-40,  5.8786e-40,
-3.5033e-40, -1.2031e-40, -3.4156e-40,
 3.0058e-40,  4.3043e-40,  5.9825e-40,
 4.9197e-40,  2.5974e-40,  2.0636e-39,
-4.1935e-40, -1.6383e-41,  1.2710e-39,
-5.3501e-40, -2.6348e-40,  3.0631e-40,
 1.7653e-39,  1.6600e-39, -1.3915e-39,
 2.0686e-39,  1.6850e-39,  1.7439e-39,
 1.6219e-39, -1.6769e-39,  7.2711e-40,
-1.7674e-39, -9.2292e-40,  5.1600e-40,
 1.3772e-39,  1.4867e-39, -1.7981e-39,
 1.0584e-39, -1.8018e-39,  8.2532e-40,
-8.8250e-07, -9.1724e-07, -8.7809e-07,
-9.3482e-07, -9.7422e-07, -9.3630e-07,
-9.2152e-07, -9.6113e-07, -9.2432e-07,
-8.2457e-40, -2.1208e-40, -6.6651e-40,
 3.2370e-40,  7.2180e-40, -3.6860e-40,
 6.5330e-40, -8.2954e-40, -3.8183e-40,
-7.8133e-02,  1.6316e-02,  3.1332e-03,
 4.0335e-02,  8.7919e-02, -3.5591e-01,
 1.1937e-02,  9.8093e-02,  1.2514e-01,
-2.7028e-02,  1.0112e-01,  5.7683e-02,
-3.9385e-02,  1.0868e-01, -5.4359e-01,
 1.3993e-02, -4.8072e-02, -1.0488e-01,
-4.1355e-03,  5.2486e-02, -1.6932e-01,
 5.2922e-02, -4.0189e-01,  7.4866e-01,
-8.9131e-02,  1.2193e-01, -1.8666e-01,
 3.7044e-40, -4.6951e-40, -1.9873e-40,
 5.3289e-41,  2.7689e-40, -4.6994e-41,
-3.1404e-40, -5.9106e-40,  6.0436e-40,
-6.0294e-40, -3.6565e-40, -1.1884e-40,
 5.5933e-40, -9.5741e-41,  4.4736e-40,
 4.3267e-40, -4.9583e-40,  6.5736e-40,
-1.7432e-40,  1.4518e-40,  2.1033e-40,
-6.5445e-40,  1.7222e-40, -2.5651e-40,
-5.2517e-40,  2.8983e-41, -1.3832e-40,
-1.4149e-01,  9.4228e-02, -9.8409e-02,
 2.0659e-01,  4.0850e-01, -1.1893e-01,
-1.4142e-01, -1.1047e-01, -8.1414e-02,
 3.4336e-41,  1.5625e-40,  2.7213e-40,
-5.3447e-40, -3.7330e-40, -3.3637e-40,
-4.3563e-40, -3.7094e-40,  1.2820e-41,
-8.1191e-02, -1.8393e-01, -1.6163e-01,
-1.4108e-01,  5.4285e-02, -3.7827e-02,
-1.1452e-01, -1.2443e-01, -8.4098e-03,
-6.2122e-02, -3.3929e-01,  4.5698e-03,
 1.5094e-01, -1.9232e-01, -5.5310e-02,
 6.2557e-02,  9.0761e-02,  1.2885e-02,
 5.2116e-02,  3.3973e-01, -1.7911e-01,
-2.4911e-01,  8.5095e-02,  2.0567e-01,
 5.8123e-02, -1.4893e-01,  7.1282e-02,
-4.6233e-40,  1.2244e-40, -3.9802e-40,
 5.8530e-40, -2.4162e-40,  4.6793e-40,
-4.8362e-40,  3.3071e-40,  1.7094e-40,
 3.5249e-40, -4.8579e-40,  1.9374e-40,
 6.2372e-42,  5.8402e-41,  3.2851e-40,
 6.1488e-40,  1.8086e-40, -5.2451e-40,
-3.0723e-40, -5.6704e-40, -5.9899e-40,
-6.3805e-40, -1.3818e-40, -2.7285e-40,
 2.4468e-40,  8.3606e-41,  1.8818e-40,
-2.3768e-01, -2.7017e-01, -1.3843e-03,
 1.4791e-01,  9.0405e-02,  2.6985e-02,
 1.8699e-01,  1.8145e-01, -1.1826e-01,
-8.3961e-40, -4.8879e-40, -6.8815e-40,
-1.0245e-40,  9.1421e-41,  5.3018e-40,
 2.2240e-40, -1.4666e-40, -4.4259e-40,
 1.1797e-01, -2.7590e-01,  1.1569e-01,
 1.3289e-01,  4.3092e-01,  1.3511e-01,
 2.9749e-02,  1.7162e-01, -1.1933e-01,
 3.6329e-02,  8.7132e-02,  6.6364e-02,
-8.2724e-02,  2.4208e-01,  6.2362e-02,
-6.8489e-02, -3.4891e-02,  3.2621e-02,
-6.4381e-02,  2.2852e-01,  1.8068e-01,
 1.8914e-01, -2.4848e-01,  1.6845e-01,
-3.3511e-03,  1.8927e-01, -7.6231e-02,
-1.2559e-26, -2.6187e-27, -1.0294e-27,
-7.1779e-27, -1.7064e-27, -7.4554e-28,
-8.6207e-27, -1.8649e-27, -7.8386e-28,
-2.0525e-40,  4.6680e-40,  5.9108e-41,
 1.0336e-40, -5.7226e-41, -6.1906e-40,
-1.8693e-40,  5.5777e-40,  6.0898e-40,
-3.4735e-41, -3.2674e-40, -2.3864e-41,
-6.6780e-40,  6.7382e-40,  1.0843e-40,
 5.1103e-40,  6.0598e-40, -3.6267e-40,
-3.2945e-03, -1.0626e-01, -7.5327e-02,
-1.2691e-01,  2.7256e-01,  1.0533e-01,
-2.1221e-01,  9.6603e-02,  3.4663e-02,
 5.0197e-09,  5.1577e-09,  4.3114e-09,
 5.9335e-09,  6.0823e-09,  5.0121e-09,
 5.6043e-09,  5.7454e-09,  4.7426e-09,
-8.5677e-02,  6.3241e-02,  2.2245e-02,
-2.1082e-02,  2.9110e-01,  8.5181e-02,
-1.3654e-01, -1.6047e-01, -4.7292e-02,
-1.3841e-01, -6.5895e-02, -7.7031e-02,
-5.1711e-02,  6.1234e-02, -4.9747e-02,
 1.1784e-01,  1.7539e-01,  3.0307e-02,
 6.6264e-03,  4.5099e-02, -3.4813e-02,
 1.8099e-02, -2.3795e-01,  2.1157e-01,
 7.8285e-02, -7.6366e-02,  2.1433e-02,
-1.4611e-03, -1.4491e-03, -1.4022e-03,
-1.4677e-03, -1.4588e-03, -1.4141e-03,
-1.4498e-03, -1.4438e-03, -1.4028e-03,
-3.2789e-07, -3.2362e-07, -3.0222e-07,
-3.5161e-07, -3.4508e-07, -3.2091e-07,
-3.4298e-07, -3.3578e-07, -3.1149e-07,
-6.7302e-07, -6.6628e-07, -6.3158e-07,
-7.0989e-07, -6.9877e-07, -6.6241e-07,
-6.9527e-07, -6.8257e-07, -6.4527e-07,
-9.0888e-02,  1.2403e-01, -3.7984e-02,
 2.2664e-01,  2.4879e-01, -4.2899e-02,
 1.4387e-01,  1.8461e-01,  1.1874e-02,
 6.1925e-40,  3.3333e-40,  1.8962e-40,
 6.8176e-40, -1.7566e-40, -3.0456e-40,
 2.7654e-40,  3.8422e-41,  4.9191e-40,
 7.3870e-02, -2.8769e-03,  3.0556e-02,
-4.8431e-02, -9.5185e-02, -2.6638e-02,
-5.0020e-02, -1.9538e-01, -1.1013e-01,
-1.0618e-02,  1.1990e-01,  2.6292e-01,
 2.3825e-02,  5.0637e-02,  3.4663e-01,
-6.6877e-04,  3.9199e-02,  1.2566e-01,
 1.9510e-02, -2.5621e-02,  1.3465e-01,
 1.7514e-02,  4.0338e-01,  3.2779e-01,
-4.4944e-01, -4.2444e-03,  3.9557e-04,
 8.1306e-41,  2.0311e-40,  2.9683e-40,
-5.7636e-40,  4.4291e-40,  4.3356e-40,
-7.1797e-41,  4.5366e-40,  3.9953e-40,
-4.5418e-40,  4.1805e-40, -3.2458e-41,
-9.4881e-41, -8.6365e-41, -1.9294e-40,
 7.1954e-41, -9.8565e-41, -5.5540e-40,
-5.3769e-40,  1.4094e-40, -1.5355e-40,
 8.8038e-41, -3.6848e-40, -1.2237e-40,
-2.8267e-41, -1.7583e-40, -5.9647e-40,
 1.0856e-01,  2.9049e-02, -1.5014e-01,
-1.1248e-01, -1.0547e-01, -1.4007e-02,
 2.2302e-01,  6.1377e-03, -1.7419e-02,
-1.5899e-40, -7.2549e-41, -2.6734e-40,
-6.6477e-40,  6.7206e-40,  4.2694e-40,
 5.2940e-40,  6.8204e-40, -3.7081e-40,
 6.3521e-02, -3.3659e-02, -2.3421e-02,
 1.9463e-01,  5.2135e-02,  1.8343e-02,
 1.6007e-01,  2.7619e-01,  1.5967e-02,
 9.8950e-04,  6.2254e-02, -1.6805e-02,
-3.8226e-02, -1.4132e-01, -3.7778e-02,
-1.5993e-02, -7.9499e-02, -2.5192e-02,
-5.1830e-02,  6.4576e-02, -3.6565e-03,
 8.4070e-02,  7.4203e-01,  1.3715e-01,
-1.4624e-01,  2.0818e-01,  4.0172e-02,
-2.0015e-41,  5.2988e-40,  2.7578e-40,
 4.1051e-40,  1.2834e-40, -3.4898e-40,
-1.1975e-40,  4.2374e-40, -3.0404e-41,
-6.3014e-40,  4.6330e-40, -4.4141e-41,
 2.5442e-41,  5.7456e-40,  2.3848e-40,
-1.0788e-40, -5.0563e-40, -5.3638e-41,
 3.5728e-40,  1.9752e-40,  6.1004e-40,
 2.8189e-41, -6.2151e-40,  1.1807e-41,
 6.5305e-41,  5.2028e-40,  1.3692e-40,
 6.3480e-02, -1.3208e-01, -3.9656e-02,
-3.2394e-01, -3.7300e-01, -8.1601e-02,
-2.6810e-01, -3.1263e-01, -1.3754e-02,
-1.2072e-40,  5.3996e-40, -3.4352e-40,
-8.0996e-41, -3.0208e-40,  3.1848e-40,
-5.6407e-40,  2.4674e-41, -2.1055e-40,
-9.1304e-02,  1.8139e-01, -4.3197e-01,
-7.5471e-02,  4.3650e-01, -4.4140e-02,
-2.1955e-02, -1.1747e-01,  1.0585e-01,
-5.1500e-02, -3.6782e-01,  1.1289e-01,
-2.2684e-02,  1.3262e-01, -1.5189e-02,
-9.9690e-03, -5.2877e-02, -4.1630e-02,
-1.5421e-01,  3.8697e-01, -1.4229e-01,
 1.7696e-01,  3.8244e-02,  4.9903e-01,
 6.0618e-02, -8.3266e-02, -7.5666e-02,
-1.6956e-40,  5.4293e-41, -2.5140e-40,
-3.1995e-40, -4.8337e-40,  2.5539e-40,
-1.1449e-40,  1.9503e-40, -1.7368e-40,
 5.4753e-40,  5.9720e-40, -4.7821e-40,
 3.8830e-40, -6.8801e-40, -2.7163e-40,
-5.3411e-40,  9.9695e-40,  4.3186e-40,
 4.6654e-40, -5.9540e-40, -2.8155e-40,
-1.4801e-40, -1.6945e-40,  1.9723e-40,
 5.8380e-40, -6.1587e-40,  6.6695e-40,
-2.9253e-02, -4.2522e-02, -1.4972e-01,
 8.6500e-02,  2.8199e-01,  1.3170e-02,
-2.0740e-01,  6.7694e-02, -3.6058e-02
}
,
{
 9.5728e-41,  5.3991e-40, -1.3764e-40,
-2.0389e-40,  2.4254e-40,  3.3492e-40,
 6.3100e-40, -7.0223e-40,  5.5850e-40,
 7.9395e-02,  2.3999e-02, -1.4908e-02,
-3.3850e-02,  5.6802e-01, -2.5435e-02,
-5.4835e-02,  5.4795e-02,  5.6436e-03,
 2.2894e-02, -4.1222e-02, -1.1675e-01,
 9.1731e-02,  1.2935e-01,  1.2358e-01,
-4.3578e-02, -1.4830e-02, -4.8830e-02,
-7.4979e-02, -2.0581e-01,  1.4103e-01,
-6.1131e-02,  5.7887e-02, -3.5880e-02,
 1.3952e-02,  4.0207e-03,  1.1924e-02,
 2.5288e-02, -1.3509e-01, -5.9642e-02,
-9.4956e-02,  1.1449e-01,  1.1605e-01,
-1.9422e-02,  6.1253e-02, -1.2697e-02,
 1.0544e-02, -2.0809e-02, -1.2336e-01,
 1.8117e-02, -2.8187e-02,  6.5993e-02,
-5.3879e-03,  7.5185e-02, -1.0908e-01,
 4.5794e-02,  3.4661e-01,  2.5943e-02,
 8.3490e-02,  5.2684e-01,  6.8395e-02,
-8.1413e-02,  1.9585e-01, -8.5180e-02,
 1.2717e-01,  3.9303e-02,  7.7022e-02,
 8.9179e-02,  4.6494e-01, -3.9521e-02,
 3.1977e-03, -7.2812e-03,  6.1050e-02,
 8.3977e-40,  1.5340e-39, -7.9692e-41,
-9.0895e-40, -1.3907e-39, -5.9796e-40,
 3.8209e-40,  1.1667e-39, -9.2501e-41,
 3.2003e-01,  1.5745e-01, -1.9259e-02,
-4.5987e-02,  1.0548e-01, -8.0514e-02,
 2.1304e-01, -3.1380e-01, -1.5369e-01,
 8.5996e-02, -1.3531e-01, -1.0763e-01,
 8.6016e-02,  1.4965e-05,  1.8685e-02,
-1.5417e-01, -1.2926e-01, -3.5453e-02,
-3.8170e-01,  3.8446e-01,  1.8818e-02,
 1.5186e-01,  1.9757e-01, -2.6066e-01,
-3.7839e-02, -8.1798e-02, -1.7627e-01,
-1.8743e-01, -1.2370e-02, -4.3000e-02,
-5.9060e-02,  2.4526e-01,  4.1474e-02,
 2.4157e-02,  7.5712e-03, -2.7695e-02,
 7.8077e-03, -4.2980e-02, -1.1186e-01,
-1.3167e-01, -7.9885e-02, -6.1016e-02,
-4.1150e-03,  5.8770e-02,  1.2713e-01,
 1.3190e-01, -5.6738e-02,  4.0037e-04,
 2.0416e-02, -2.6343e-02, -7.5970e-03,
-4.1940e-02, -3.0681e-05,  4.4473e-02,
 8.0878e-02,  2.7460e-02,  6.7052e-03,
 1.1567e-01,  1.0840e-01,  7.6688e-02,
-8.0028e-02, -5.4912e-02,  1.4908e-02,
-1.6593e-09, -1.6794e-09, -1.5955e-09,
-1.7895e-09, -1.8154e-09, -1.7334e-09,
-1.7501e-09, -1.7741e-09, -1.6998e-09,
-1.8026e-02, -1.6955e-02, -4.2360e-03,
 2.4289e-02,  7.7284e-02, -4.1659e-03,
 1.7088e-02,  6.0831e-02, -9.0745e-02,
 2.6511e-02,  8.8159e-02,  1.0561e-01,
 4.9517e-02,  1.2426e-02,  1.5537e-01,
-1.6286e-02, -2.2565e-01, -2.3849e-02,
-8.3432e-03, -1.4025e-02, -6.2832e-02,
 8.0614e-02,  1.8649e-01, -3.1684e-02,
-3.4939e-03,  1.8873e-03, -1.3997e-01,
-7.0853e-03,  1.5906e-01,  6.7454e-02,
 4.6216e-02,  2.4383e-01,  1.4701e-01,
-7.4514e-02,  6.7570e-02,  9.1006e-02,
-7.4745e-03, -1.1190e-02,  4.5522e-02,
-1.3870e-02, -6.9516e-02, -3.5489e-03,
 3.3374e-02,  4.7561e-02, -1.2599e-02,
-2.1119e-02, -8.7149e-02,  6.5706e-02,
-2.1975e-02,  1.3902e-01, -1.6201e-01,
-6.4217e-02, -2.7866e-02, -4.2819e-02,
 1.0826e-02, -2.2625e-02, -2.6815e-02,
-7.9245e-02,  1.9614e-01,  7.2776e-03,
 3.0953e-02,  2.3800e-02,  4.9492e-02,
-5.0273e-40,  1.2403e-41,  5.8127e-40,
 3.2777e-40, -6.4094e-40,  4.9781e-40,
-7.8534e-40, -4.6311e-40,  1.3330e-40,
-3.0605e-01,  1.7887e-01,  1.0631e-01,
 4.1584e-01,  1.9608e-01, -5.4098e-02,
 2.3902e-01, -1.6948e-01,  1.5523e-01,
 8.6082e-03,  1.8813e-01, -1.2238e-01,
-1.6245e-01, -1.1194e-02, -1.8042e-01,
-1.3526e-01, -3.4242e-02, -1.0507e-01,
-1.4271e-01,  1.9050e-01,  8.6028e-02,
 6.0812e-02, -2.2403e-01,  1.2804e-01,
 4.8136e-03,  3.9310e-02, -5.9199e-02,
 2.0393e-02,  2.6985e-01, -1.8622e-01,
-8.6311e-02, -1.3168e-01, -3.5810e-02,
 2.0536e-02, -9.1108e-02,  1.7130e-01,
-1.8226e-01,  6.8708e-02, -1.5522e-01,
-6.1624e-02, -1.2033e-01,  7.0617e-02,
 2.1330e-02,  9.4178e-02,  8.0328e-02,
-1.3430e-01, -7.5803e-02,  1.7173e-02,
-1.2285e-01, -1.1655e-01, -1.1711e-03,
 5.3530e-02,  1.4974e-01,  1.4624e-01,
-4.5552e-02, -1.1748e-01, -1.5010e-01,
-2.0430e-01, -9.5633e-02, -2.6155e-02,
 4.7479e-02,  1.8316e-02, -7.5710e-02,
 1.8831e-40, -7.6199e-40, -4.7602e-40,
-6.6168e-40,  8.9962e-40, -1.2425e-39,
 7.9973e-40,  1.4644e-40,  5.6365e-40,
-2.0277e-02,  6.6722e-03,  4.7406e-03,
 2.4475e-01,  4.1413e-01,  3.4286e-02,
 8.5284e-02,  2.0259e-01,  1.0259e-01,
-1.4212e-02,  1.0655e-01, -4.1769e-02,
-5.2571e-02,  2.4284e-02, -9.6049e-02,
-1.1090e-01, -6.5825e-02, -1.1855e-01,
-2.1166e-02,  1.6765e-02, -3.3954e-04,
 1.3364e-02,  2.0784e-02,  1.1219e-01,
 1.2310e-02,  1.0528e-01,  1.6728e-01,
 1.6451e-02,  2.0858e-01,  8.9734e-02,
-7.5138e-02,  3.3147e-03, -3.3353e-01,
 5.0920e-02,  1.3846e-01, -1.0723e-01,
 4.9367e-03,  9.0724e-02, -6.5666e-02,
-7.1177e-02, -3.5466e-01, -2.8721e-01,
-1.6778e-02,  2.5639e-02, -1.1711e-02,
-1.3646e-01, -9.5167e-02,  4.1304e-02,
 4.6341e-02,  1.4761e-01,  1.6152e-01,
 6.2647e-04, -7.7656e-02, -8.1906e-02,
 8.1988e-03,  3.7136e-02,  2.3505e-03,
-1.3645e-01,  2.3720e-01, -1.1189e-01,
 1.0462e-01,  1.1042e-01,  3.2753e-02,
-6.7748e-40,  5.9135e-40,  6.6560e-40,
-5.8903e-40, -1.0134e-39, -1.3380e-39,
-6.3604e-40, -4.7563e-40, -1.0222e-40,
 7.0032e-02, -7.9810e-02, -2.7158e-02,
-5.3864e-02,  5.2574e-02,  9.2793e-03,
 2.0356e-02,  1.0320e-02, -1.1818e-02,
 1.6988e-02,  1.0082e-01,  5.1208e-02,
 4.7605e-02,  2.4175e-01,  2.7277e-01,
 2.7711e-01,  1.9202e-01,  3.1184e-01,
-4.6932e-03, -1.1271e-01, -4.9992e-02,
 1.2044e-01,  3.1157e-01,  7.3591e-02,
-1.1665e-01, -1.7981e-01,  8.1636e-02,
-2.0538e-02,  3.6423e-01,  1.4591e-01,
-8.6599e-03, -4.4141e-02, -1.3456e-01,
 5.1546e-02, -3.1135e-01, -4.6444e-02,
 4.8596e-02, -1.3391e-02, -1.0411e-01,
-4.2742e-02, -1.4582e-01,  5.3358e-02,
-2.6172e-01,  2.0343e-02, -1.1556e-01,
 1.0714e-01, -9.3460e-02,  1.1775e-01,
-5.0128e-02, -1.1765e-01, -4.0532e-02,
 1.9679e-01,  9.9964e-02,  8.2307e-02,
 2.6539e-02, -4.7900e-02, -1.6127e-02,
 5.0179e-02,  6.5633e-02,  8.8518e-03,
-7.4343e-02, -3.7296e-02,  8.3110e-02,
 6.9361e-40,  3.6427e-40,  3.0437e-40,
 4.2856e-41, -4.7870e-40,  5.6317e-40,
-2.4673e-40, -6.9736e-41,  8.1050e-41,
 1.4750e-01,  8.4131e-02, -6.8416e-03,
 2.6148e-01,  2.7665e-01, -5.2113e-02,
 1.8354e-01,  1.2722e-01, -4.4965e-03,
 9.9266e-02, -4.9856e-03,  4.9290e-02,
 2.8627e-02, -1.8399e-01,  4.1959e-02,
 4.2181e-03, -6.2869e-03,  5.8692e-03,
-1.6420e-01,  9.8738e-02, -1.1666e-01,
-2.1157e-01,  4.1103e-01, -9.4918e-02,
 1.3203e-04, -1.6331e-01, -9.3356e-02,
-1.3518e-01,  2.0108e-01,  1.0110e-01,
-2.1268e-01, -1.5062e-01,  1.8200e-01,
 4.7569e-02, -1.3939e-01,  1.0215e-01,
 1.7826e-01, -2.4541e-01, -9.1302e-03,
 6.4010e-02, -4.0197e-01, -1.4086e-01,
 3.4038e-02,  1.7450e-01,  7.3735e-02,
 1.0008e-01, -1.4092e-01, -8.4556e-02,
 1.4555e-01, -2.1386e-01, -7.7191e-02,
 1.6096e-01,  3.7982e-02,  5.3724e-02,
 1.6859e-01,  1.7285e-01, -4.6769e-02,
 2.1401e-01,  4.7173e-01,  1.1834e-01,
 2.0381e-01,  2.4755e-01,  7.1882e-02,
-2.1165e-40, -1.9259e-40, -5.0990e-41,
-7.1298e-42, -4.2590e-41,  3.1709e-40,
 4.1065e-40, -4.2585e-41,  3.4243e-40,
-1.0338e-40,  4.6039e-40, -3.3818e-40,
-3.9589e-41,  5.9574e-40, -5.8014e-41,
 1.4505e-41, -3.5326e-40, -3.9806e-40,
 4.2423e-40, -1.7055e-40, -4.9666e-40,
 2.2853e-40, -2.4684e-40, -1.3794e-40,
-5.6764e-40, -1.7905e-40, -5.8915e-40,
-6.5524e-24, -9.0617e-25, -2.1617e-26,
-3.1597e-24, -4.3344e-25, -1.5660e-26,
-1.2193e-25, -2.5639e-26, -1.2715e-27,
-1.7378e-03, -1.7343e-03, -1.7255e-03,
-1.7419e-03, -1.7401e-03, -1.7344e-03,
-1.7368e-03, -1.7380e-03, -1.7349e-03,
-2.1439e-18, -3.1321e-18, -3.8714e-18,
-2.0576e-18, -2.8201e-18, -3.9274e-18,
-1.5047e-18, -1.8838e-18, -2.6202e-18,
-2.9574e-40,  4.0860e-40, -1.5966e-40,
-6.7527e-41,  7.6661e-41, -5.9491e-40,
 3.0843e-40,  8.1079e-41, -2.5140e-40,
-3.7315e-40,  9.4787e-41,  4.6794e-40,
 1.9383e-40,  5.0336e-41,  3.0561e-40,
-5.4286e-40,  5.5999e-40, -4.6977e-40
}
,
{
-1.7797e-01,  4.2792e-03,  1.4593e-02,
-9.5797e-02, -8.9939e-03, -5.1701e-02,
 1.7242e-01, -3.9279e-02, -5.1603e-02,
-9.5551e-02,  1.2364e-01, -1.5859e-02,
-5.2952e-01,  1.9360e-01, -8.8909e-02,
-9.0362e-02,  1.0001e-01, -1.4869e-01,
-1.8118e-01,  1.1365e-01, -2.6290e-02,
-1.7577e-02,  1.4090e-01, -7.0055e-03,
-2.3038e-02,  6.7733e-02, -7.8753e-02,
 4.7683e-02, -2.6399e-02,  1.5766e-02,
-4.3282e-02, -1.5328e-02, -3.4286e-02,
 1.3589e-01,  4.5216e-01,  2.1589e-01,
 2.8358e-02, -7.4942e-02,  1.0399e-03,
 1.8794e-01, -2.0583e-02, -7.5884e-02,
 1.4485e-01, -6.6054e-02,  4.1890e-02,
 1.4217e-01, -4.1486e-01,  2.2503e-03,
 1.6143e-01,  1.1475e-01, -1.7507e-02,
 1.8859e-02, -4.1361e-02, -2.4366e-02,
 1.6599e-01, -1.2791e-01, -1.4340e-03,
 2.9528e-01,  1.7499e-01, -2.6257e-01,
-1.0051e-01,  1.3705e-01,  1.6794e-02,
-3.7351e-40,  6.3010e-40, -1.2071e-40,
-4.6380e-40,  1.8442e-40, -3.5994e-40,
-2.1459e-40, -4.3455e-40, -6.1978e-41,
-2.3638e-40, -4.6965e-40, -3.4232e-40,
-1.6517e-40,  4.7178e-40, -1.6757e-40,
 6.7890e-41, -4.3000e-40,  1.8323e-40,
 4.5416e-40, -2.9010e-40, -1.5200e-40,
-6.4373e-40, -8.7351e-41,  6.5595e-42,
 5.1625e-40, -6.0418e-40, -7.3962e-40,
-9.6854e-07, -9.9337e-07, -9.4368e-07,
-1.0036e-06, -1.0410e-06, -9.9732e-07,
-9.6597e-07, -1.0048e-06, -9.5740e-07,
-6.7698e-40,  6.5977e-40, -1.3264e-40,
 7.2821e-40,  1.3843e-40,  3.0949e-40,
-3.7702e-40,  2.6194e-40,  8.1969e-40,
-3.2283e-40, -5.5487e-40,  5.8744e-40,
 1.6124e-40,  3.3512e-40,  3.1454e-40,
-6.4510e-40, -5.7692e-40,  5.5184e-40,
 6.4218e-40, -4.3187e-40, -6.4629e-40,
 4.9246e-40,  5.9593e-40,  8.3132e-41,
-2.3841e-40, -5.6196e-40, -3.2230e-41,
 4.3824e-40, -3.8344e-40, -9.9086e-42,
-2.9323e-40,  2.1916e-40,  4.4739e-40,
 5.6837e-41,  5.1796e-41, -2.4338e-40,
-2.2853e-40, -3.8920e-40,  6.1587e-40,
-2.9474e-41,  4.6214e-40, -3.6292e-40,
-1.4928e-40, -3.6708e-41,  5.2020e-40,
-5.7654e-09, -1.1785e-08, -8.8001e-09,
-2.9135e-08, -4.5536e-08, -2.9715e-08,
-3.6952e-08, -7.9172e-08, -4.9227e-08,
-4.9138e-40, -9.0061e-42,  4.6251e-40,
-2.9970e-41, -2.5468e-40, -3.4253e-36,
 2.5450e-40, -4.2678e-34, -1.4374e-28,
-8.8253e-04, -8.0017e-04, -9.3414e-04,
-6.8950e-04, -5.6309e-04, -6.7745e-04,
-6.9313e-04, -5.5764e-04, -6.2943e-04,
-3.9701e-33, -9.5883e-33, -3.1777e-37,
-6.9570e-32, -5.3399e-35, -2.3366e-40,
-2.4234e-34,  5.0487e-40, -3.3736e-40,
-6.8199e-10, -3.7572e-10, -8.5291e-13,
-2.4590e-09, -1.3672e-09, -4.6688e-12,
-4.6488e-10, -3.8222e-10, -9.9711e-13,
-2.1094e-10, -5.9622e-10, -4.9438e-10,
-6.1286e-11, -1.0669e-10, -1.5596e-10,
-8.8002e-14, -5.8746e-14, -1.4590e-13,
-6.3794e-15, -1.8271e-11, -4.1128e-10,
-4.9621e-16, -7.2096e-12, -6.9279e-10,
-5.6144e-18, -1.7576e-13, -5.3456e-11,
-2.9789e-40, -4.6452e-40,  1.5649e-40,
-1.8445e-40, -5.2942e-40,  2.5130e-40,
 6.2269e-40,  3.9166e-41, -2.4197e-40,
 9.0760e-02, -5.2868e-03, -2.6395e-02,
-9.9856e-02, -7.3340e-02,  1.3300e-01,
 1.0308e-01, -1.5246e-01,  1.2339e-01,
 4.6725e-02, -2.3542e-01, -1.3863e-02,
 5.7244e-02, -1.5891e-02,  9.8016e-02,
 7.2911e-03, -1.3940e-01, -2.0913e-01,
-1.5888e-01,  6.4212e-02, -2.1546e-01,
-3.4265e-02,  4.9644e-01,  1.3381e-03,
-1.4354e-01,  4.8149e-02, -9.2803e-02,
 1.9610e-01, -1.3477e-01,  1.2191e-01,
 1.6710e-01,  5.8697e-02,  1.1687e-01,
 6.0683e-02, -3.5600e-02, -1.1227e-01,
-8.4316e-02,  1.1657e-01, -4.8695e-02,
-5.2302e-03,  2.5815e-01, -1.8508e-01,
-6.2641e-02,  1.0480e-01,  1.3785e-02,
 4.6731e-02, -1.0164e-01, -1.7670e-01,
-1.7834e-01,  3.0852e-01, -2.5739e-01,
-2.2183e-02, -1.9036e-03, -4.5486e-03,
-4.5824e-02, -4.5149e-02,  5.1053e-01,
-1.9989e-01,  6.8123e-02, -6.2866e-02,
 2.7566e-03, -1.5939e-01, -3.1040e-02,
 5.6501e-40,  5.2828e-40, -5.9773e-40,
-4.3530e-40, -1.1658e-40,  4.9705e-41,
 4.8101e-40,  5.0236e-40,  2.0476e-40,
-1.1467e-01,  1.3332e-01, -1.2336e-01,
 1.4310e-01,  3.7580e-01,  7.0850e-02,
 6.9081e-02,  3.1938e-01, -1.7485e-02,
-4.6274e-02,  6.8184e-02, -2.5255e-02,
 3.5271e-02, -1.3705e-01, -3.5633e-02,
-1.8815e-02, -1.3214e-01,  1.1412e-01,
 2.0662e-02, -3.8208e-02, -7.2247e-02,
-2.1090e-01, -1.6468e-01, -2.3197e-02,
-1.1914e-02, -2.6586e-01,  1.5109e-03,
-2.9195e-02,  4.9515e-02,  4.2538e-02,
 1.4730e-01,  1.6152e-02, -1.0880e-01,
 5.6958e-02, -2.1066e-01,  2.2279e-02,
-2.4039e-02, -4.9974e-02,  1.0838e-01,
 1.7474e-01, -1.3279e-03, -1.6419e-02,
 7.7142e-02, -9.5464e-02,  1.0625e-03,
 2.2538e-02,  1.4066e-01,  1.0608e-01,
-5.5728e-02, -3.0788e-01, -5.7340e-02,
 1.0889e-01, -8.3718e-02,  4.2279e-02,
 1.8534e-02,  1.8143e-01, -3.2056e-03,
-1.1901e-02, -2.1405e-01,  9.9680e-02,
-6.1342e-02, -2.4007e-02,  6.2649e-03,
-2.7320e-40, -1.3336e-40,  2.4202e-41,
-7.1225e-41,  1.2848e-40,  1.5426e-40,
-4.2798e-40,  6.3079e-40,  6.2629e-40,
 1.7236e-01, -1.7372e-01, -2.4310e-02,
-2.9287e-01,  1.1828e-01,  7.9138e-02,
-4.6967e-03, -1.9892e-01,  5.6266e-02,
-3.1126e-02, -1.5562e-01,  4.9946e-02,
-1.7629e-02,  2.0615e-01, -2.8133e-01,
-5.1562e-02,  8.5690e-02, -7.4489e-02,
 8.9529e-02, -2.3073e-01, -1.9610e-01,
 3.1305e-01,  1.5354e-01, -1.9586e-01,
-1.7986e-02,  6.8774e-02,  9.4214e-03,
 8.2274e-02,  1.0623e-02,  7.9213e-02,
-1.4599e-01,  4.6377e-01, -3.1812e-01,
-1.0848e-01,  6.5773e-02, -2.3308e-02,
-1.1759e-01, -3.9590e-03,  2.1528e-02,
-3.1803e-01,  2.0293e-01, -1.7350e-01,
-1.0695e-02,  1.3857e-01, -6.2197e-02,
-3.5472e-02, -1.9470e-01,  2.7219e-01,
 5.7694e-02,  8.0505e-02, -2.3929e-01,
-3.8329e-02,  2.4917e-02, -1.6319e-02,
 1.1357e-01,  1.6542e-01,  3.6216e-01,
 8.2936e-02,  4.3700e-01,  3.0351e-01,
-5.2152e-02,  6.2574e-02,  1.2403e-01,
 2.1644e-40,  7.2343e-41,  5.5580e-40,
-4.3927e-40,  5.0561e-40, -1.5560e-41,
-3.2783e-40, -8.8219e-41,  5.4415e-40,
-7.0347e-02, -3.6123e-02, -2.6558e-02,
 1.0338e-01,  2.1157e-01, -1.6694e-01,
-1.2414e-01, -2.3954e-01, -7.4278e-02,
-3.2513e-02, -1.5172e-02,  8.7642e-02,
-2.4394e-02, -4.8092e-01,  2.5011e-02,
 6.4874e-02,  3.5122e-02, -2.9093e-01,
-2.8825e-01, -7.0915e-02,  7.8353e-02,
-1.4449e-01,  4.0775e-02,  6.2470e-02,
 4.5757e-03,  2.1859e-01,  9.0181e-02,
-1.0668e-01,  8.4464e-02,  3.0633e-02,
 3.2457e-01, -2.8182e-01,  4.2576e-02,
 8.3366e-02,  2.6827e-01, -1.3106e-01,
 3.8893e-01,  3.2303e-01,  1.0759e-01,
 7.4688e-02, -2.0267e-01,  1.3278e-01,
 3.9157e-02,  2.4545e-01, -8.3322e-04,
-1.0137e-01,  1.9100e-01, -7.9111e-02,
 6.0946e-03,  6.9015e-02,  1.3956e-01,
-2.0919e-02,  4.7313e-02, -2.0762e-03,
-5.2454e-03,  2.2381e-01, -8.3334e-02,
-1.5565e-01,  2.7169e-01, -2.7854e-02,
-3.0081e-03,  1.7734e-02, -8.7189e-02,
 2.1541e-40, -6.7487e-40,  1.7678e-40,
-3.9857e-40, -1.1965e-40, -8.6754e-41,
-4.0721e-40,  2.2073e-41,  4.2728e-40,
-1.0348e-02,  5.4534e-02, -1.6843e-02,
-5.9143e-02,  2.3817e-01, -8.0245e-02,
 2.4049e-02, -1.3761e-01, -3.1000e-02,
-9.3572e-03,  2.3699e-02, -6.8689e-02,
 2.1178e-02,  8.9732e-02,  1.0031e-01,
-1.0051e-02,  4.6489e-02, -1.5705e-01,
 8.5281e-02, -3.3804e-03,  1.4080e-02,
 9.0800e-02,  2.3685e-01,  1.8100e-01,
 2.8387e-02,  4.4003e-02,  2.3241e-02,
 3.8895e-02,  5.6259e-02, -5.5126e-03,
 3.6259e-02, -2.6326e-01,  2.1181e-01,
-4.0062e-02,  1.7112e-01, -6.7841e-02,
-1.1844e-01, -4.3610e-02,  2.0195e-02,
-1.4826e-01,  4.1095e-02,  1.5936e-01,
-4.5349e-02,  1.4110e-01, -2.0911e-02,
-5.9909e-04, -2.7910e-01, -8.8665e-02,
-1.7786e-02,  1.8444e-01,  1.1057e-01,
-2.7502e-03,  6.3586e-02, -4.7819e-03,
 3.2120e-02, -8.9057e-02, -2.1850e-02,
 8.1681e-02,  3.3128e-01, -2.0586e-01,
-3.5788e-02,  4.9861e-02, -9.2399e-02,
-3.4012e-04, -3.4292e-04, -3.3847e-04,
-3.4439e-04, -3.4796e-04, -3.4421e-04,
-3.3919e-04, -3.4336e-04, -3.4058e-04
}
,
{
-1.3657e-02,  1.1156e-01,  7.2200e-02,
 1.1480e-02, -8.4944e-01,  8.4269e-02,
-3.9708e-02, -2.2843e-02,  9.6383e-03,
 2.6648e-40,  9.1590e-41,  6.7161e-40,
-6.6959e-40, -2.5194e-40, -2.0946e-40,
 3.6800e-40, -1.1584e-40,  6.2195e-40,
-1.3560e-41, -8.0151e-41,  4.4048e-40,
-4.1209e-40,  2.7411e-40,  3.2419e-40,
 5.8333e-40,  1.1503e-40, -5.0783e-40,
-5.5529e-02, -2.5359e-02,  5.0955e-02,
-2.5656e-01,  1.6277e-01, -7.8177e-02,
 4.0336e-01,  2.9204e-02, -1.4069e-01,
 9.0289e-03,  5.0162e-02,  1.7636e-03,
-8.2033e-02, -1.9730e-01, -2.9780e-02,
 2.1504e-01,  6.8211e-02, -4.3901e-02,
-1.9179e-02, -2.0895e-02, -1.9322e-02,
 3.6823e-01, -5.3238e-02,  9.7242e-02,
 2.8175e-01, -1.4789e-01,  3.4802e-02,
 2.3631e-02,  4.1018e-02,  3.5676e-02,
-8.6522e-02,  1.9012e-01, -1.6566e-01,
-1.1459e-02,  3.2106e-01, -1.5671e-01,
 2.6787e-01,  5.2008e-02,  1.3043e-02,
-1.1212e-01, -1.7870e-01,  1.1380e-01,
-1.3808e-01, -1.8231e-02, -1.7496e-02,
 1.6126e-02, -2.3455e-01,  1.0819e-02,
-6.4042e-02,  8.0989e-02, -2.0084e-01,
-1.6731e-02, -6.2462e-02,  3.4582e-02,
-8.3275e-40, -7.1013e-40, -6.8322e-40,
 2.3575e-40,  5.8301e-41, -3.7432e-40,
-3.6291e-40,  6.6980e-40,  1.4574e-40,
-4.3792e-40, -2.5814e-40, -3.4986e-41,
-6.5130e-40, -4.4757e-40,  6.8536e-40,
 4.7222e-40, -7.3197e-41, -3.4635e-40,
 5.2032e-02,  7.9704e-02,  4.3231e-02,
-2.1183e-01,  1.9694e-01,  9.0796e-03,
 2.6422e-02,  2.6500e-02,  7.8346e-02,
 3.0334e-01, -1.3751e-01, -2.1607e-02,
-1.1428e-01, -7.4824e-02,  1.1323e-02,
-1.0918e-02,  5.0459e-02, -7.1639e-02,
-3.1260e-02, -2.0389e-01, -3.9946e-02,
 2.8608e-01,  1.2299e-01, -1.9546e-02,
-2.4429e-01, -3.8619e-02, -5.3084e-02,
-2.2943e-01, -2.4008e-02,  1.1432e-01,
 2.1442e-01,  3.2855e-01, -2.8829e-01,
 2.2023e-02, -5.8598e-02, -8.9337e-02,
-3.0052e-01, -1.8402e-01,  1.2089e-02,
 2.1355e-02,  2.9582e-01,  1.2974e-01,
 6.8963e-02,  8.1491e-03, -6.0322e-02,
 2.9124e-03, -1.6586e-02,  1.1665e-02,
-9.2850e-03, -9.9084e-02, -3.3469e-01,
-7.8724e-03, -1.4394e-02, -3.5968e-02,
 3.8770e-40, -2.8639e-40,  4.6953e-40,
 4.2631e-40,  6.2568e-41, -5.3500e-40,
-2.1987e-40,  1.3435e-40,  4.4101e-40,
-3.9973e-40,  6.3046e-40,  1.6046e-40,
 4.4338e-40,  1.6940e-41,  4.1598e-40,
 2.6132e-40, -2.9888e-40, -7.5708e-41,
-1.5834e-02,  8.3954e-02, -6.2336e-02,
-2.1114e-03,  4.3267e-02, -7.8905e-02,
-1.0977e-01,  6.7621e-01, -1.7418e-01,
-4.1036e-02, -8.1151e-02,  1.2406e-01,
 4.0172e-02, -9.1061e-02, -1.1172e-01,
-4.2933e-03, -3.9701e-03,  1.3028e-01,
 8.2880e-03, -6.3965e-02,  1.2244e-02,
-3.0537e-02, -4.8395e-02,  4.8473e-02,
-1.9965e-05,  2.1817e-01,  4.1274e-03,
-7.8153e-03, -2.6079e-02,  1.7038e-02,
-5.8247e-03,  1.3071e-01, -1.3396e-01,
 1.9204e-02,  4.2170e-02,  2.7013e-01,
-3.5441e-02, -8.4752e-03,  5.9933e-02,
 5.1357e-02,  4.6991e-01, -1.1519e-02,
 2.2325e-02, -1.8482e-01, -3.7481e-01,
-8.3646e-02,  9.7678e-02, -6.1224e-02,
 2.7994e-02,  8.8978e-02,  1.3171e-02,
 3.1002e-03,  1.7363e-02,  5.7592e-03,
-3.2792e-08, -3.3583e-08, -3.0789e-08,
-3.3877e-08, -3.4913e-08, -3.2361e-08,
-3.1342e-08, -3.2503e-08, -3.0403e-08,
 6.8578e-08,  9.2142e-08,  9.1126e-08,
 9.4299e-08,  1.1502e-07,  1.1535e-07,
 9.3175e-08,  1.1184e-07,  9.9799e-08,
-4.6616e-02, -2.4899e-02, -1.8697e-02,
 1.0603e-01, -3.9992e-03, -2.2587e-02,
-5.1283e-02, -1.6369e-01,  8.4375e-03,
-8.1947e-02,  4.2694e-02, -1.1240e-03,
-5.5653e-02, -1.1285e-01, -4.5949e-02,
-1.1032e-01,  2.1335e-02, -4.5373e-02,
-1.3731e-02, -2.7043e-03,  2.6805e-02,
-2.0211e-01,  4.3257e-01,  2.9983e-02,
-2.1784e-01, -2.7302e-02,  6.3212e-03,
 5.0083e-02,  1.5504e-01, -5.7119e-02,
 4.8236e-02,  3.7695e-02, -1.3592e-01,
-1.0103e-02, -5.7685e-02, -7.2164e-02,
 1.0287e-01,  7.4816e-02,  7.4852e-02,
 8.3892e-02,  1.5851e-01,  2.9315e-02,
 6.5781e-02,  7.7821e-02,  3.5852e-02,
-1.6637e-01, -2.3309e-01,  4.6097e-02,
 6.3994e-02, -3.8186e-01,  3.3319e-02,
-3.4832e-02, -2.2820e-02,  2.9905e-02,
-3.8813e-41, -2.8626e-40, -9.0218e-41,
 4.1216e-40, -4.4215e-40,  6.9768e-40,
 5.6281e-40,  2.0477e-40,  2.7797e-40,
-4.4903e-40, -6.2574e-41,  4.9971e-40,
 5.0135e-40, -3.1945e-40, -2.4694e-40,
 2.6587e-40, -4.9583e-40,  6.3300e-40,
 3.7396e-02,  5.0982e-04, -2.0477e-02,
-3.6219e-01, -5.4041e-02, -5.0102e-02,
 2.5413e-01,  2.4204e-01,  1.1825e-02,
 5.4188e-02, -4.7746e-02,  2.9555e-02,
 9.0741e-04, -2.3564e-02, -2.3329e-02,
 6.1327e-02,  1.2302e-04, -4.9922e-02,
 5.5537e-02, -1.6758e-02, -4.9906e-04,
 4.8292e-01, -1.1133e-01,  3.9674e-02,
 5.3155e-02, -2.0619e-03, -8.6256e-03,
-1.0191e-02, -1.8468e-01,  1.9335e-02,
 6.8215e-02,  7.6345e-01, -8.4551e-02,
-5.5900e-02, -1.8952e-01, -1.5742e-01,
 2.0310e-01,  7.3795e-02,  3.2519e-02,
-1.8205e-01, -1.9443e-01, -2.5689e-03,
-3.4457e-02,  3.4153e-02,  5.9127e-02,
 8.7102e-02,  9.9942e-02,  1.0179e-02,
-9.3659e-02, -3.1806e-01, -2.5840e-02,
-2.0781e-02, -2.3140e-02, -4.3124e-02,
-6.8758e-40,  6.8751e-40,  4.8747e-41,
 7.5546e-40,  6.1463e-40,  1.4176e-40,
-1.5286e-40,  7.0593e-40,  7.2032e-41,
-6.0758e-40, -3.6200e-40,  1.2123e-40,
 1.3627e-40,  3.2983e-40,  3.6171e-40,
-4.2148e-40,  1.1102e-40,  3.2714e-40,
-3.3770e-02, -2.9005e-02,  3.0949e-02,
-2.0980e-01,  1.3734e-01, -7.0116e-03,
-1.6143e-01,  1.0809e-01, -6.5394e-02,
 2.3822e-02,  1.2946e-03,  4.9062e-02,
-1.3962e-01, -1.0316e-02, -7.7881e-02,
 1.0840e-01,  1.2561e-01, -7.4837e-02,
-1.4141e-02, -2.5462e-02, -2.9232e-02,
 3.4793e-01,  7.2506e-02,  2.4321e-02,
 3.9514e-01,  7.3758e-05,  1.9667e-02,
-1.6211e-02,  5.2985e-02,  6.1726e-02,
-1.8887e-01,  2.7585e-01, -1.9595e-01,
 8.1957e-02,  9.4834e-02, -1.2457e-01,
 2.7614e-01,  1.1522e-01,  1.6558e-02,
-5.1675e-01,  1.4739e-01,  7.5779e-02,
-6.9298e-02, -9.3419e-02,  3.4919e-02,
 1.4700e-02, -8.0093e-02,  7.9963e-02,
 3.6180e-02, -1.3603e-01, -2.2494e-02,
-6.2491e-03,  7.0200e-02,  6.5341e-02,
-4.5940e-41,  2.5437e-40, -3.3111e-40,
 5.9661e-40,  6.2521e-40,  5.6418e-40,
 1.9187e-40, -5.8872e-40,  5.5747e-40,
-7.2827e-08, -9.8105e-08, -7.6474e-08,
-1.0102e-07, -1.3308e-07, -9.4260e-08,
-6.0778e-08, -7.7608e-08, -5.8082e-08,
 6.0874e-03, -2.7664e-03, -8.9427e-03,
-2.7690e-02, -8.0226e-02,  3.4118e-02,
 4.6862e-04, -3.3901e-02,  1.0307e-02,
 4.9866e-03,  1.4045e-02, -3.4145e-02,
 4.8688e-02,  6.3394e-01, -3.6632e-02,
-1.3692e-01,  2.6015e-02, -4.8379e-02,
 3.0737e-02,  6.6564e-02,  1.9202e-02,
 6.9903e-02, -1.7049e-01, -3.0475e-02,
 9.7842e-02,  9.5358e-03, -6.6992e-03,
 5.0058e-02, -6.4318e-03, -4.2592e-02,
-6.1522e-02, -9.2671e-02,  9.5445e-02,
-1.0664e-02,  9.0606e-03,  4.9525e-02,
-1.9478e-02, -1.2012e-01,  8.6040e-03,
-1.5761e-01, -2.1139e-01, -5.0805e-02,
-3.1109e-02, -6.5970e-02, -5.7202e-02,
-9.6879e-38,  5.7263e-40,  6.2889e-40,
-2.9557e-35, -1.9346e-37, -1.7152e-40,
-1.4661e-34, -2.3948e-36, -1.9343e-40,
-1.7352e-39, -1.8069e-39,  1.6512e-39,
-8.0461e-40, -1.2666e-39,  1.4288e-39,
 1.0588e-39, -1.7928e-39,  1.1679e-39,
 2.2827e-40, -5.4515e-41, -4.1768e-40,
 3.9033e-40,  6.1988e-41,  5.9877e-40,
-4.3355e-41, -5.1088e-40,  5.9845e-40,
-4.8238e-40, -1.8586e-40,  4.8699e-40,
-9.7225e-41,  4.3387e-40, -4.3683e-40,
-7.9278e-41, -5.3614e-40,  2.1911e-40,
-3.3982e-40, -5.3335e-40,  3.8540e-40,
 1.9051e-40, -2.0840e-40,  2.2868e-40,
-3.5020e-40, -3.4276e-40,  2.7395e-42,
 3.9197e-40,  6.1843e-40, -1.5888e-40,
 4.3516e-40, -6.1852e-40, -5.3692e-40,
-4.3268e-40,  3.5154e-40,  3.4477e-40,
-4.8414e-40,  2.2647e-40, -2.5591e-40,
 4.6326e-40, -3.0462e-40,  4.7817e-40,
 6.3219e-40, -5.3425e-40, -2.9848e-40,
-3.0476e-04, -3.1119e-04, -3.0074e-04,
-3.0543e-04, -3.1289e-04, -3.0298e-04,
-2.9241e-04, -2.9994e-04, -2.9138e-04
}
,
{
-2.2886e-02,  3.0069e-02,  1.2279e-01,
-2.9607e-02, -1.3458e-02, -1.8369e-01,
-1.7976e-02, -1.2919e-01, -6.6546e-02,
 7.6594e-04, -5.1065e-02,  1.9211e-05,
-1.0156e-02,  2.2367e-01, -1.2114e-01,
-2.3259e-02,  3.1726e-02, -9.7583e-03,
-3.0406e-01, -8.5172e-02, -1.4132e-02,
 1.2509e-01, -1.6910e-02, -3.6749e-02,
-8.8396e-02, -6.1596e-02, -2.1031e-02,
 1.3706e-02,  1.2434e-02, -4.3578e-02,
 6.4836e-02,  3.7039e-01,  3.8083e-02,
-1.3868e-02, -2.4857e-01, -2.5418e-01,
-3.6083e-03, -1.4006e-01, -4.8300e-02,
 5.5218e-02, -3.4282e-02, -2.1022e-02,
 3.7147e-02,  1.0268e-01, -7.1269e-02,
 1.6049e-02,  3.5472e-02, -1.9878e-02,
 2.8277e-02,  1.3740e-01,  6.6502e-03,
 3.8955e-03, -1.1759e-01,  4.3889e-02,
 6.8744e-03,  1.6272e-02,  1.6642e-02,
-8.8544e-02, -1.0881e-01, -8.9627e-02,
 3.2759e-02, -2.6696e-02, -8.4958e-02,
-1.6779e-40, -6.3646e-41, -6.2486e-40,
 2.3154e-40,  2.8049e-40,  3.7718e-40,
-3.3950e-40, -3.1501e-40,  5.8709e-40,
 2.0449e-02, -4.3580e-01,  1.5969e-02,
 3.4675e-02,  1.9941e-01, -8.0873e-02,
-3.2384e-02,  5.6344e-02,  8.9692e-03,
-1.1170e-02, -1.2673e-02,  4.3187e-02,
 5.5547e-02, -2.2235e-01,  2.4216e-01,
 4.0400e-02,  1.8354e-01, -1.4474e-01,
 2.6906e-01,  2.2741e-01, -2.4673e-03,
-6.9062e-02, -1.2156e-01,  1.6729e-02,
 2.4439e-02, -1.1874e-02, -1.4035e-02,
-1.2263e-02,  4.1108e-02,  4.1866e-02,
 1.8895e-02, -2.5243e-01,  9.7463e-02,
-4.1239e-02,  4.3700e-03,  7.5675e-02,
-2.0316e-02,  2.3573e-01,  2.3418e-02,
 3.3424e-02, -4.7173e-02,  3.0255e-02,
 7.4843e-03, -1.1335e-01, -8.8175e-02,
-2.3941e-02,  5.3023e-02, -7.2781e-02,
-3.7517e-02, -2.1453e-01,  5.4563e-04,
-4.3044e-02, -1.9716e-02, -1.0634e-01,
-1.3623e-01, -1.7242e-01, -3.6714e-02,
 1.1179e-01,  1.1549e-01,  9.4917e-02,
 2.3988e-02, -8.2220e-03, -3.5372e-02,
-2.3917e-40, -4.1869e-41,  3.7775e-41,
 2.8931e-40, -9.4850e-41,  2.5694e-40,
 3.3549e-40, -2.4334e-40, -5.5933e-41,
-1.9716e-02,  2.0360e-02, -4.5978e-02,
 2.5402e-02, -7.1254e-01,  4.7465e-02,
-6.2473e-03,  5.1689e-02,  2.3126e-02,
-5.0558e-03,  3.2192e-02,  1.1107e-02,
-4.7049e-03,  2.5278e-01,  5.9237e-02,
 2.8581e-02, -1.1434e-01, -2.4136e-01,
-6.9507e-02,  6.8347e-03, -1.6335e-02,
 1.0987e-01,  1.8080e-01, -5.7867e-03,
 9.3656e-02,  7.3564e-02,  2.4958e-02,
 5.6972e-02,  4.0580e-02,  2.6332e-03,
 9.4719e-02,  2.5239e-01,  6.9955e-02,
 4.4847e-02,  1.8087e-01,  1.5088e-01,
 2.1314e-02, -4.7133e-02,  2.2706e-02,
-5.6287e-03,  1.4596e-01,  2.0964e-01,
 2.8964e-02, -7.1557e-02,  1.5075e-02,
 1.0833e-02, -1.1626e-02,  2.8292e-02,
-1.0158e-02,  9.8859e-02, -4.0897e-01,
 2.7369e-02,  7.4120e-02,  5.7262e-02,
 2.8656e-02, -7.5623e-02, -9.0947e-03,
-1.2960e-01, -5.4158e-01, -1.3588e-01,
-1.2901e-03, -1.4325e-01,  8.2858e-03,
-5.9278e-06, -7.2368e-06, -7.5409e-06,
-5.4296e-06, -6.6148e-06, -6.9823e-06,
-4.8972e-06, -5.8767e-06, -6.1659e-06,
 1.5370e-02, -1.8240e-01, -8.5260e-02,
-4.0944e-02,  2.4427e-01, -5.7881e-02,
-2.7119e-02,  5.5116e-03,  3.5015e-02,
-2.9458e-02,  2.5316e-02,  8.8560e-02,
 2.2953e-02,  2.3985e-01,  5.0543e-02,
 1.4562e-02, -6.5178e-02,  1.3463e-02,
 1.3083e-01,  1.2521e-02, -1.3636e-02,
 1.0879e-01,  1.6766e-01, -3.2611e-02,
 6.3338e-02,  3.9920e-02,  3.9185e-02,
-6.1213e-03,  5.0655e-02, -1.0811e-01,
 1.5786e-02,  1.6093e-01, -6.1902e-02,
-5.6798e-02, -1.0651e-02, -3.8003e-02,
-3.8947e-02,  7.9906e-02,  2.1873e-02,
 3.8091e-02, -6.3571e-01,  2.3666e-01,
-8.6361e-03,  6.2839e-02, -8.0551e-02,
-1.7522e-02,  8.0021e-02,  6.6860e-02,
-2.1659e-03,  1.1946e-01,  3.1698e-02,
 9.8994e-03,  3.1685e-02,  7.7209e-02,
 5.9570e-02, -1.2125e-01,  7.8625e-02,
-2.6125e-02, -4.1262e-01,  2.2064e-02,
 3.4458e-02,  3.6127e-02, -5.7792e-02,
-1.2149e-26, -1.5445e-26, -1.3458e-26,
-6.7449e-27, -8.8317e-27, -8.3289e-27,
-3.4386e-27, -4.3329e-27, -4.3255e-27,
-1.5780e-02, -2.6614e-02,  1.4318e-01,
 1.3537e-02, -2.3703e-01,  8.4689e-02,
-8.7172e-03, -2.8145e-03,  7.8048e-03,
 7.5935e-04,  2.1485e-02,  3.1295e-02,
-1.0616e-02,  3.0246e-01,  5.1059e-02,
 1.7473e-02, -1.3711e-01,  9.1028e-02,
-1.5658e-01,  9.8222e-02, -3.8660e-04,
 3.1492e-01, -2.8222e-02,  2.2849e-03,
 1.8981e-02,  5.9734e-03, -2.4251e-03,
 5.2160e-02,  6.7007e-02,  7.6489e-03,
 2.5086e-02,  2.8090e-01,  2.9873e-02,
 2.2436e-02,  1.4690e-03, -7.4726e-02,
 1.8654e-02,  3.9925e-02,  4.6807e-02,
-2.2763e-02, -1.4600e-01, -3.8916e-01,
 2.3622e-02, -4.3300e-02,  6.5899e-02,
-6.7366e-03, -6.4845e-02, -1.8648e-01,
 4.7096e-03,  2.0520e-01,  2.9793e-01,
 1.7569e-02,  1.0420e-02, -9.7611e-02,
 9.0317e-05, -2.1156e-01, -4.2835e-02,
-4.2504e-02, -2.8200e-01,  2.9541e-02,
-1.4953e-03,  1.1330e-02,  2.3501e-03,
-2.5191e-12, -4.6044e-12, -5.0983e-12,
-2.4663e-12, -4.4377e-12, -5.1064e-12,
-1.7225e-12, -2.8429e-12, -3.4459e-12,
 4.5889e-02,  8.9519e-02,  9.6885e-03,
-3.7171e-02,  1.9273e-01, -1.2944e-02,
-4.5066e-02,  1.1940e-01,  7.7917e-03,
-3.7940e-02, -1.7852e-02,  1.6174e-01,
-2.7138e-02,  1.7405e-01,  1.2757e-01,
 1.7575e-02,  1.7501e-01, -1.7261e-01,
-3.0167e-01,  2.1264e-01, -5.4101e-02,
 5.7181e-02,  3.2086e-01, -2.5189e-02,
 6.8791e-02,  7.4073e-02,  6.2485e-02,
-1.1685e-01,  2.6102e-02, -1.3473e-01,
-1.6078e-01,  1.9415e-01,  1.1456e-01,
-7.3770e-02, -7.7910e-02,  7.5032e-03,
-9.9791e-02,  1.3601e-01,  2.1827e-02,
-8.6410e-02,  5.4442e-01, -4.0614e-02,
-3.3447e-02, -1.5097e-01, -3.8832e-02,
-3.3858e-02, -3.2723e-02, -9.5508e-02,
-6.6866e-03,  2.2605e-01, -2.4545e-02,
 1.5539e-02,  1.3255e-01,  1.6304e-01,
 9.2646e-02, -8.3526e-02,  7.9621e-02,
 1.2571e-01, -6.1765e-01, -1.0857e-01,
 6.3326e-02, -4.4147e-02, -3.1851e-02,
-1.1289e-17, -2.8354e-17, -4.2437e-17,
-8.5476e-18, -2.0919e-17, -2.8530e-17,
-6.5004e-18, -1.4187e-17, -1.6725e-17,
-6.6543e-03, -7.3452e-02,  5.6590e-02,
-1.1079e-02,  5.6300e-01,  4.8181e-02,
 1.3203e-02, -3.3697e-02, -5.9626e-02,
 9.5321e-04,  3.3130e-02, -1.1170e-02,
-4.0731e-02,  1.9926e-01,  1.4038e-01,
-1.9691e-02, -4.4156e-02, -2.0302e-01,
-3.1023e-01,  2.5532e-02, -1.8600e-02,
-8.8340e-04,  1.2686e-01,  2.9801e-02,
-3.8998e-02,  1.0548e-02, -1.0130e-02,
 1.3619e-02,  1.7058e-01,  8.9738e-02,
 6.6881e-02,  2.6444e-01,  1.7424e-01,
-5.5972e-04,  1.7636e-02,  1.3105e-01,
-2.8910e-03,  9.0412e-02, -3.2259e-02,
-9.4915e-03, -4.4019e-01,  5.4240e-02,
 9.4677e-04,  9.9924e-02,  3.9129e-02,
 3.0629e-02, -1.1738e-01, -7.5613e-02,
 2.8720e-02,  2.1297e-01, -4.0424e-01,
-8.1913e-03,  8.2714e-02,  4.5838e-02,
-1.1364e-01, -1.7665e-01, -5.7729e-02,
 8.0016e-02, -4.2798e-01, -1.0805e-01,
-3.0152e-02,  1.3113e-03, -2.0691e-03,
-4.9919e-07, -6.2994e-07, -6.8287e-07,
-4.3973e-07, -5.4969e-07, -5.9146e-07,
-3.9415e-07, -4.8158e-07, -5.0845e-07,
 2.9395e-02, -5.4668e-02, -1.0222e-01,
-1.5872e-02, -2.8545e-01,  1.9104e-01,
-2.5504e-02,  9.7708e-02, -1.4674e-02,
-2.9208e-02,  1.6061e-02,  2.6569e-02,
-8.3383e-02,  7.9743e-02, -4.7974e-02,
-3.2278e-02, -2.1418e-02,  1.2001e-02,
 1.4024e-01, -3.3952e-01,  6.0963e-03,
 2.4923e-01, -1.8617e-01, -2.2086e-03,
 3.2181e-02, -1.1813e-02, -1.8727e-02,
-1.3008e-01,  1.4290e-01, -5.5369e-02,
-3.5037e-02,  1.0950e-01, -8.0151e-02,
-6.2968e-03,  7.6215e-02, -7.4713e-02,
-8.1088e-02,  1.3237e-01, -7.1621e-02,
-6.2594e-02,  1.7229e-01,  4.0298e-01,
-6.3518e-03, -8.2744e-02, -2.1081e-02,
 1.6270e-02, -3.1866e-02,  5.8604e-02,
 2.6518e-02,  2.9905e-01, -3.5746e-02,
 1.0974e-02,  2.0761e-01, -2.1822e-02,
-4.9122e-02,  2.8042e-03,  8.5798e-02,
 8.6881e-02, -5.8088e-01,  3.4525e-01,
 4.9485e-02, -1.0452e-01,  4.1507e-02,
 2.5428e-40, -4.4558e-40, -2.2090e-40,
-2.9727e-40, -4.8454e-40,  3.0397e-40,
 1.1696e-40, -3.3028e-40, -2.2959e-40
}
};

__constant float biasL[8][8] = 
{
{
-1.0979e-04, -3.8216e-01, -3.3859e-03, -5.8220e-02,  9.0103e-04, -3.0372e-02, -5.6709e-04, -7.4283e-02
}
,
{
-1.7705e-01, -9.9115e-04, -4.5030e-38, -1.1432e-03, -1.0626e-02, -4.0294e-39,  1.5228e-02,  2.6352e-02
}
,
{
-5.4865e-04,  5.6345e-03, -3.4892e-04,  3.2401e-01, -2.7480e-04, -8.3964e-20, -8.7793e-22, -3.2553e-02
}
,
{
-9.5587e-11, -1.2587e-02, -1.9221e-02, -1.8023e-02, -2.9386e-02, -4.1898e-02,  7.6962e-02, -1.1523e-01
}
,
{
-0.0274, -0.0207,  0.0067, -0.0155, -0.0104, -0.0107, -0.0040, -0.0018
}
,
{
-1.3710e-03, -1.1058e-08, -8.6308e-04,  6.7664e-03,  1.3569e-01, -3.5797e-03, -6.9701e-03, -7.2400e-03
}
,
{
-3.3854e-03, -3.4835e-03, -6.1020e-03,  2.0489e-01, -1.3682e-03, -2.6996e-03,  5.1358e-01, -1.1836e-04
}
,
{
0.0326, 0.0135, 0.6751, 0.2662, 0.3646, 0.3592, 0.5598, 0.0823
}
};

__constant float kernelsL10[4 * 8] = 
{
 0.0878,  0.0418,
 0.3778,  0.4755,
-0.3220, -0.4874,
-0.0400,  0.0508,
 0.1034,  0.0174,
 0.5012,  0.3901,
 0.3621, -0.1646,
-0.1304,  0.0012,
 0.2230,  0.3027,
 0.1619, -0.4512,
-0.2099,  0.1890,
-0.0327,  0.1432,
 0.2421,  0.3364,
-0.0938,  0.3157,
 0.1137, -0.2162,
 0.2269, -0.1285
};


__kernel void conv1To8(
    __read_only image2d_t srcImg, 
    __write_only image2d_t tmpImgOut1, 
    __write_only image2d_t tmpImgOut2)
{
    const int x = get_global_id(0), y = get_global_id(1);
    if(x >= get_image_width(srcImg) || y >= get_image_height(srcImg))
        return;

    int2 coord = (int2)(x, y);

    float4 tl = read_imagef(srcImg, samplerN, (int2)(x-1,y-1));
    float4 tc = read_imagef(srcImg, samplerN, (int2)(x,y-1));
    float4 tr = read_imagef(srcImg, samplerN, (int2)(x+1,y-1));
    float4 ml = read_imagef(srcImg, samplerN, (int2)(x-1,y));
    float4 mc = read_imagef(srcImg, samplerN, coord);
    float4 mr = read_imagef(srcImg, samplerN, (int2)(x+1,y));
    float4 bl = read_imagef(srcImg, samplerN, (int2)(x-1,y+1));
    float4 bc = read_imagef(srcImg, samplerN, (int2)(x,y+1));
    float4 br = read_imagef(srcImg, samplerN, (int2)(x+1,y+1));

    float4 c1234 = RELU((float4)(
        tl.x * kernelsL1[0*9+0] + tc.x * kernelsL1[0*9+1] + tr.x * kernelsL1[0*9+2] +
        ml.x * kernelsL1[0*9+3] + mc.x * kernelsL1[0*9+4] + mr.x * kernelsL1[0*9+5] +
        bl.x * kernelsL1[0*9+6] + bc.x * kernelsL1[0*9+7] + br.x * kernelsL1[0*9+8] + biasL1[0],

        tl.x * kernelsL1[1*9+0] + tc.x * kernelsL1[1*9+1] + tr.x * kernelsL1[1*9+2] +
        ml.x * kernelsL1[1*9+3] + mc.x * kernelsL1[1*9+4] + mr.x * kernelsL1[1*9+5] +
        bl.x * kernelsL1[1*9+6] + bc.x * kernelsL1[1*9+7] + br.x * kernelsL1[1*9+8] + biasL1[1],

        tl.x * kernelsL1[2*9+0] + tc.x * kernelsL1[2*9+1] + tr.x * kernelsL1[2*9+2] +
        ml.x * kernelsL1[2*9+3] + mc.x * kernelsL1[2*9+4] + mr.x * kernelsL1[2*9+5] +
        bl.x * kernelsL1[2*9+6] + bc.x * kernelsL1[2*9+7] + br.x * kernelsL1[2*9+8] + biasL1[2],

        tl.x * kernelsL1[3*9+0] + tc.x * kernelsL1[3*9+1] + tr.x * kernelsL1[3*9+2] +
        ml.x * kernelsL1[3*9+3] + mc.x * kernelsL1[3*9+4] + mr.x * kernelsL1[3*9+5] +
        bl.x * kernelsL1[3*9+6] + bc.x * kernelsL1[3*9+7] + br.x * kernelsL1[3*9+8] + biasL1[3]
    ));
    float4 c5678 = RELU((float4)(
        tl.x * kernelsL1[4*9+0] + tc.x * kernelsL1[4*9+1] + tr.x * kernelsL1[4*9+2] +
        ml.x * kernelsL1[4*9+3] + mc.x * kernelsL1[4*9+4] + mr.x * kernelsL1[4*9+5] +
        bl.x * kernelsL1[4*9+6] + bc.x * kernelsL1[4*9+7] + br.x * kernelsL1[4*9+8] + biasL1[4],

        tl.x * kernelsL1[5*9+0] + tc.x * kernelsL1[5*9+1] + tr.x * kernelsL1[5*9+2] +
        ml.x * kernelsL1[5*9+3] + mc.x * kernelsL1[5*9+4] + mr.x * kernelsL1[5*9+5] +
        bl.x * kernelsL1[5*9+6] + bc.x * kernelsL1[5*9+7] + br.x * kernelsL1[5*9+8] + biasL1[5],

        tl.x * kernelsL1[6*9+0] + tc.x * kernelsL1[6*9+1] + tr.x * kernelsL1[6*9+2] +
        ml.x * kernelsL1[6*9+3] + mc.x * kernelsL1[6*9+4] + mr.x * kernelsL1[6*9+5] +
        bl.x * kernelsL1[6*9+6] + bc.x * kernelsL1[6*9+7] + br.x * kernelsL1[6*9+8] + biasL1[6],

        tl.x * kernelsL1[7*9+0] + tc.x * kernelsL1[7*9+1] + tr.x * kernelsL1[7*9+2] +
        ml.x * kernelsL1[7*9+3] + mc.x * kernelsL1[7*9+4] + mr.x * kernelsL1[7*9+5] +
        bl.x * kernelsL1[7*9+6] + bc.x * kernelsL1[7*9+7] + br.x * kernelsL1[7*9+8] + biasL1[7]
    ));

    write_imagef(tmpImgOut1, coord, c1234);
    write_imagef(tmpImgOut2, coord, c5678);
}

__kernel void conv8To8(
    __read_only image2d_t tmpImgIn1,
    __read_only image2d_t tmpImgIn2, 
    __write_only image2d_t tmpImgOut1, 
    __write_only image2d_t tmpImgOut2,
    int l)
{
    const int x = get_global_id(0), y = get_global_id(1);
    if(x >= get_image_width(tmpImgIn1) || y >= get_image_height(tmpImgIn1))
        return;

    int2 coord = (int2)(x, y);

    float4 tl1 = read_imagef(tmpImgIn1, samplerN, (int2)(x-1,y-1));
    float4 tc1 = read_imagef(tmpImgIn1, samplerN, (int2)(x,y-1));
    float4 tr1 = read_imagef(tmpImgIn1, samplerN, (int2)(x+1,y-1));
    float4 ml1 = read_imagef(tmpImgIn1, samplerN, (int2)(x-1,y));
    float4 mc1 = read_imagef(tmpImgIn1, samplerN, coord);
    float4 mr1 = read_imagef(tmpImgIn1, samplerN, (int2)(x+1,y));
    float4 bl1 = read_imagef(tmpImgIn1, samplerN, (int2)(x-1,y+1));
    float4 bc1 = read_imagef(tmpImgIn1, samplerN, (int2)(x,y+1));
    float4 br1 = read_imagef(tmpImgIn1, samplerN, (int2)(x+1,y+1));

    float4 tl2 = read_imagef(tmpImgIn2, samplerN, (int2)(x-1,y-1));
    float4 tc2 = read_imagef(tmpImgIn2, samplerN, (int2)(x,y-1));
    float4 tr2 = read_imagef(tmpImgIn2, samplerN, (int2)(x+1,y-1));
    float4 ml2 = read_imagef(tmpImgIn2, samplerN, (int2)(x-1,y));
    float4 mc2 = read_imagef(tmpImgIn2, samplerN, coord);
    float4 mr2 = read_imagef(tmpImgIn2, samplerN, (int2)(x+1,y));
    float4 bl2 = read_imagef(tmpImgIn2, samplerN, (int2)(x-1,y+1));
    float4 bc2 = read_imagef(tmpImgIn2, samplerN, (int2)(x,y+1));
    float4 br2 = read_imagef(tmpImgIn2, samplerN, (int2)(x+1,y+1));
    
    float4 c1234 = RELU((float4)(
        tl1.x * kernelsL[l][0*72+0*9+0] + tc1.x * kernelsL[l][0*72+0*9+1] + tr1.x * kernelsL[l][0*72+0*9+2] +
        ml1.x * kernelsL[l][0*72+0*9+3] + mc1.x * kernelsL[l][0*72+0*9+4] + mr1.x * kernelsL[l][0*72+0*9+5] +
        bl1.x * kernelsL[l][0*72+0*9+6] + bc1.x * kernelsL[l][0*72+0*9+7] + br1.x * kernelsL[l][0*72+0*9+8] + 

        tl1.y * kernelsL[l][0*72+1*9+0] + tc1.y * kernelsL[l][0*72+1*9+1] + tr1.y * kernelsL[l][0*72+1*9+2] +
        ml1.y * kernelsL[l][0*72+1*9+3] + mc1.y * kernelsL[l][0*72+1*9+4] + mr1.y * kernelsL[l][0*72+1*9+5] +
        bl1.y * kernelsL[l][0*72+1*9+6] + bc1.y * kernelsL[l][0*72+1*9+7] + br1.y * kernelsL[l][0*72+1*9+8] + 

        tl1.z * kernelsL[l][0*72+2*9+0] + tc1.z * kernelsL[l][0*72+2*9+1] + tr1.z * kernelsL[l][0*72+2*9+2] +
        ml1.z * kernelsL[l][0*72+2*9+3] + mc1.z * kernelsL[l][0*72+2*9+4] + mr1.z * kernelsL[l][0*72+2*9+5] +
        bl1.z * kernelsL[l][0*72+2*9+6] + bc1.z * kernelsL[l][0*72+2*9+7] + br1.z * kernelsL[l][0*72+2*9+8] + 

        tl1.w * kernelsL[l][0*72+3*9+0] + tc1.w * kernelsL[l][0*72+3*9+1] + tr1.w * kernelsL[l][0*72+3*9+2] +
        ml1.w * kernelsL[l][0*72+3*9+3] + mc1.w * kernelsL[l][0*72+3*9+4] + mr1.w * kernelsL[l][0*72+3*9+5] +
        bl1.w * kernelsL[l][0*72+3*9+6] + bc1.w * kernelsL[l][0*72+3*9+7] + br1.w * kernelsL[l][0*72+3*9+8] +

        tl2.x * kernelsL[l][0*72+4*9+0] + tc2.x * kernelsL[l][0*72+4*9+1] + tr2.x * kernelsL[l][0*72+4*9+2] +
        ml2.x * kernelsL[l][0*72+4*9+3] + mc2.x * kernelsL[l][0*72+4*9+4] + mr2.x * kernelsL[l][0*72+4*9+5] +
        bl2.x * kernelsL[l][0*72+4*9+6] + bc2.x * kernelsL[l][0*72+4*9+7] + br2.x * kernelsL[l][0*72+4*9+8] + 

        tl2.y * kernelsL[l][0*72+5*9+0] + tc2.y * kernelsL[l][0*72+5*9+1] + tr2.y * kernelsL[l][0*72+5*9+2] +
        ml2.y * kernelsL[l][0*72+5*9+3] + mc2.y * kernelsL[l][0*72+5*9+4] + mr2.y * kernelsL[l][0*72+5*9+5] +
        bl2.y * kernelsL[l][0*72+5*9+6] + bc2.y * kernelsL[l][0*72+5*9+7] + br2.y * kernelsL[l][0*72+5*9+8] + 

        tl2.z * kernelsL[l][0*72+6*9+0] + tc2.z * kernelsL[l][0*72+6*9+1] + tr2.z * kernelsL[l][0*72+6*9+2] +
        ml2.z * kernelsL[l][0*72+6*9+3] + mc2.z * kernelsL[l][0*72+6*9+4] + mr2.z * kernelsL[l][0*72+6*9+5] +
        bl2.z * kernelsL[l][0*72+6*9+6] + bc2.z * kernelsL[l][0*72+6*9+7] + br2.z * kernelsL[l][0*72+6*9+8] + 

        tl2.w * kernelsL[l][0*72+7*9+0] + tc2.w * kernelsL[l][0*72+7*9+1] + tr2.w * kernelsL[l][0*72+7*9+2] +
        ml2.w * kernelsL[l][0*72+7*9+3] + mc2.w * kernelsL[l][0*72+7*9+4] + mr2.w * kernelsL[l][0*72+7*9+5] +
        bl2.w * kernelsL[l][0*72+7*9+6] + bc2.w * kernelsL[l][0*72+7*9+7] + br2.w * kernelsL[l][0*72+7*9+8] + biasL[l][0]
        ,
        tl1.x * kernelsL[l][1*72+0*9+0] + tc1.x * kernelsL[l][1*72+0*9+1] + tr1.x * kernelsL[l][1*72+0*9+2] +
        ml1.x * kernelsL[l][1*72+0*9+3] + mc1.x * kernelsL[l][1*72+0*9+4] + mr1.x * kernelsL[l][1*72+0*9+5] +
        bl1.x * kernelsL[l][1*72+0*9+6] + bc1.x * kernelsL[l][1*72+0*9+7] + br1.x * kernelsL[l][1*72+0*9+8] + 

        tl1.y * kernelsL[l][1*72+1*9+0] + tc1.y * kernelsL[l][1*72+1*9+1] + tr1.y * kernelsL[l][1*72+1*9+2] +
        ml1.y * kernelsL[l][1*72+1*9+3] + mc1.y * kernelsL[l][1*72+1*9+4] + mr1.y * kernelsL[l][1*72+1*9+5] +
        bl1.y * kernelsL[l][1*72+1*9+6] + bc1.y * kernelsL[l][1*72+1*9+7] + br1.y * kernelsL[l][1*72+1*9+8] + 

        tl1.z * kernelsL[l][1*72+2*9+0] + tc1.z * kernelsL[l][1*72+2*9+1] + tr1.z * kernelsL[l][1*72+2*9+2] +
        ml1.z * kernelsL[l][1*72+2*9+3] + mc1.z * kernelsL[l][1*72+2*9+4] + mr1.z * kernelsL[l][1*72+2*9+5] +
        bl1.z * kernelsL[l][1*72+2*9+6] + bc1.z * kernelsL[l][1*72+2*9+7] + br1.z * kernelsL[l][1*72+2*9+8] + 

        tl1.w * kernelsL[l][1*72+3*9+0] + tc1.w * kernelsL[l][1*72+3*9+1] + tr1.w * kernelsL[l][1*72+3*9+2] +
        ml1.w * kernelsL[l][1*72+3*9+3] + mc1.w * kernelsL[l][1*72+3*9+4] + mr1.w * kernelsL[l][1*72+3*9+5] +
        bl1.w * kernelsL[l][1*72+3*9+6] + bc1.w * kernelsL[l][1*72+3*9+7] + br1.w * kernelsL[l][1*72+3*9+8] +

        tl2.x * kernelsL[l][1*72+4*9+0] + tc2.x * kernelsL[l][1*72+4*9+1] + tr2.x * kernelsL[l][1*72+4*9+2] +
        ml2.x * kernelsL[l][1*72+4*9+3] + mc2.x * kernelsL[l][1*72+4*9+4] + mr2.x * kernelsL[l][1*72+4*9+5] +
        bl2.x * kernelsL[l][1*72+4*9+6] + bc2.x * kernelsL[l][1*72+4*9+7] + br2.x * kernelsL[l][1*72+4*9+8] + 

        tl2.y * kernelsL[l][1*72+5*9+0] + tc2.y * kernelsL[l][1*72+5*9+1] + tr2.y * kernelsL[l][1*72+5*9+2] +
        ml2.y * kernelsL[l][1*72+5*9+3] + mc2.y * kernelsL[l][1*72+5*9+4] + mr2.y * kernelsL[l][1*72+5*9+5] +
        bl2.y * kernelsL[l][1*72+5*9+6] + bc2.y * kernelsL[l][1*72+5*9+7] + br2.y * kernelsL[l][1*72+5*9+8] + 

        tl2.z * kernelsL[l][1*72+6*9+0] + tc2.z * kernelsL[l][1*72+6*9+1] + tr2.z * kernelsL[l][1*72+6*9+2] +
        ml2.z * kernelsL[l][1*72+6*9+3] + mc2.z * kernelsL[l][1*72+6*9+4] + mr2.z * kernelsL[l][1*72+6*9+5] +
        bl2.z * kernelsL[l][1*72+6*9+6] + bc2.z * kernelsL[l][1*72+6*9+7] + br2.z * kernelsL[l][1*72+6*9+8] + 

        tl2.w * kernelsL[l][1*72+7*9+0] + tc2.w * kernelsL[l][1*72+7*9+1] + tr2.w * kernelsL[l][1*72+7*9+2] +
        ml2.w * kernelsL[l][1*72+7*9+3] + mc2.w * kernelsL[l][1*72+7*9+4] + mr2.w * kernelsL[l][1*72+7*9+5] +
        bl2.w * kernelsL[l][1*72+7*9+6] + bc2.w * kernelsL[l][1*72+7*9+7] + br2.w * kernelsL[l][1*72+7*9+8] + biasL[l][1]
        ,
        tl1.x * kernelsL[l][2*72+0*9+0] + tc1.x * kernelsL[l][2*72+0*9+1] + tr1.x * kernelsL[l][2*72+0*9+2] +
        ml1.x * kernelsL[l][2*72+0*9+3] + mc1.x * kernelsL[l][2*72+0*9+4] + mr1.x * kernelsL[l][2*72+0*9+5] +
        bl1.x * kernelsL[l][2*72+0*9+6] + bc1.x * kernelsL[l][2*72+0*9+7] + br1.x * kernelsL[l][2*72+0*9+8] + 

        tl1.y * kernelsL[l][2*72+1*9+0] + tc1.y * kernelsL[l][2*72+1*9+1] + tr1.y * kernelsL[l][2*72+1*9+2] +
        ml1.y * kernelsL[l][2*72+1*9+3] + mc1.y * kernelsL[l][2*72+1*9+4] + mr1.y * kernelsL[l][2*72+1*9+5] +
        bl1.y * kernelsL[l][2*72+1*9+6] + bc1.y * kernelsL[l][2*72+1*9+7] + br1.y * kernelsL[l][2*72+1*9+8] + 

        tl1.z * kernelsL[l][2*72+2*9+0] + tc1.z * kernelsL[l][2*72+2*9+1] + tr1.z * kernelsL[l][2*72+2*9+2] +
        ml1.z * kernelsL[l][2*72+2*9+3] + mc1.z * kernelsL[l][2*72+2*9+4] + mr1.z * kernelsL[l][2*72+2*9+5] +
        bl1.z * kernelsL[l][2*72+2*9+6] + bc1.z * kernelsL[l][2*72+2*9+7] + br1.z * kernelsL[l][2*72+2*9+8] + 

        tl1.w * kernelsL[l][2*72+3*9+0] + tc1.w * kernelsL[l][2*72+3*9+1] + tr1.w * kernelsL[l][2*72+3*9+2] +
        ml1.w * kernelsL[l][2*72+3*9+3] + mc1.w * kernelsL[l][2*72+3*9+4] + mr1.w * kernelsL[l][2*72+3*9+5] +
        bl1.w * kernelsL[l][2*72+3*9+6] + bc1.w * kernelsL[l][2*72+3*9+7] + br1.w * kernelsL[l][2*72+3*9+8] +

        tl2.x * kernelsL[l][2*72+4*9+0] + tc2.x * kernelsL[l][2*72+4*9+1] + tr2.x * kernelsL[l][2*72+4*9+2] +
        ml2.x * kernelsL[l][2*72+4*9+3] + mc2.x * kernelsL[l][2*72+4*9+4] + mr2.x * kernelsL[l][2*72+4*9+5] +
        bl2.x * kernelsL[l][2*72+4*9+6] + bc2.x * kernelsL[l][2*72+4*9+7] + br2.x * kernelsL[l][2*72+4*9+8] + 

        tl2.y * kernelsL[l][2*72+5*9+0] + tc2.y * kernelsL[l][2*72+5*9+1] + tr2.y * kernelsL[l][2*72+5*9+2] +
        ml2.y * kernelsL[l][2*72+5*9+3] + mc2.y * kernelsL[l][2*72+5*9+4] + mr2.y * kernelsL[l][2*72+5*9+5] +
        bl2.y * kernelsL[l][2*72+5*9+6] + bc2.y * kernelsL[l][2*72+5*9+7] + br2.y * kernelsL[l][2*72+5*9+8] + 

        tl2.z * kernelsL[l][2*72+6*9+0] + tc2.z * kernelsL[l][2*72+6*9+1] + tr2.z * kernelsL[l][2*72+6*9+2] +
        ml2.z * kernelsL[l][2*72+6*9+3] + mc2.z * kernelsL[l][2*72+6*9+4] + mr2.z * kernelsL[l][2*72+6*9+5] +
        bl2.z * kernelsL[l][2*72+6*9+6] + bc2.z * kernelsL[l][2*72+6*9+7] + br2.z * kernelsL[l][2*72+6*9+8] + 

        tl2.w * kernelsL[l][2*72+7*9+0] + tc2.w * kernelsL[l][2*72+7*9+1] + tr2.w * kernelsL[l][2*72+7*9+2] +
        ml2.w * kernelsL[l][2*72+7*9+3] + mc2.w * kernelsL[l][2*72+7*9+4] + mr2.w * kernelsL[l][2*72+7*9+5] +
        bl2.w * kernelsL[l][2*72+7*9+6] + bc2.w * kernelsL[l][2*72+7*9+7] + br2.w * kernelsL[l][2*72+7*9+8] + biasL[l][2]
        ,
        tl1.x * kernelsL[l][3*72+0*9+0] + tc1.x * kernelsL[l][3*72+0*9+1] + tr1.x * kernelsL[l][3*72+0*9+2] +
        ml1.x * kernelsL[l][3*72+0*9+3] + mc1.x * kernelsL[l][3*72+0*9+4] + mr1.x * kernelsL[l][3*72+0*9+5] +
        bl1.x * kernelsL[l][3*72+0*9+6] + bc1.x * kernelsL[l][3*72+0*9+7] + br1.x * kernelsL[l][3*72+0*9+8] + 

        tl1.y * kernelsL[l][3*72+1*9+0] + tc1.y * kernelsL[l][3*72+1*9+1] + tr1.y * kernelsL[l][3*72+1*9+2] +
        ml1.y * kernelsL[l][3*72+1*9+3] + mc1.y * kernelsL[l][3*72+1*9+4] + mr1.y * kernelsL[l][3*72+1*9+5] +
        bl1.y * kernelsL[l][3*72+1*9+6] + bc1.y * kernelsL[l][3*72+1*9+7] + br1.y * kernelsL[l][3*72+1*9+8] + 

        tl1.z * kernelsL[l][3*72+2*9+0] + tc1.z * kernelsL[l][3*72+2*9+1] + tr1.z * kernelsL[l][3*72+2*9+2] +
        ml1.z * kernelsL[l][3*72+2*9+3] + mc1.z * kernelsL[l][3*72+2*9+4] + mr1.z * kernelsL[l][3*72+2*9+5] +
        bl1.z * kernelsL[l][3*72+2*9+6] + bc1.z * kernelsL[l][3*72+2*9+7] + br1.z * kernelsL[l][3*72+2*9+8] + 

        tl1.w * kernelsL[l][3*72+3*9+0] + tc1.w * kernelsL[l][3*72+3*9+1] + tr1.w * kernelsL[l][3*72+3*9+2] +
        ml1.w * kernelsL[l][3*72+3*9+3] + mc1.w * kernelsL[l][3*72+3*9+4] + mr1.w * kernelsL[l][3*72+3*9+5] +
        bl1.w * kernelsL[l][3*72+3*9+6] + bc1.w * kernelsL[l][3*72+3*9+7] + br1.w * kernelsL[l][3*72+3*9+8] +

        tl2.x * kernelsL[l][3*72+4*9+0] + tc2.x * kernelsL[l][3*72+4*9+1] + tr2.x * kernelsL[l][3*72+4*9+2] +
        ml2.x * kernelsL[l][3*72+4*9+3] + mc2.x * kernelsL[l][3*72+4*9+4] + mr2.x * kernelsL[l][3*72+4*9+5] +
        bl2.x * kernelsL[l][3*72+4*9+6] + bc2.x * kernelsL[l][3*72+4*9+7] + br2.x * kernelsL[l][3*72+4*9+8] + 

        tl2.y * kernelsL[l][3*72+5*9+0] + tc2.y * kernelsL[l][3*72+5*9+1] + tr2.y * kernelsL[l][3*72+5*9+2] +
        ml2.y * kernelsL[l][3*72+5*9+3] + mc2.y * kernelsL[l][3*72+5*9+4] + mr2.y * kernelsL[l][3*72+5*9+5] +
        bl2.y * kernelsL[l][3*72+5*9+6] + bc2.y * kernelsL[l][3*72+5*9+7] + br2.y * kernelsL[l][3*72+5*9+8] + 

        tl2.z * kernelsL[l][3*72+6*9+0] + tc2.z * kernelsL[l][3*72+6*9+1] + tr2.z * kernelsL[l][3*72+6*9+2] +
        ml2.z * kernelsL[l][3*72+6*9+3] + mc2.z * kernelsL[l][3*72+6*9+4] + mr2.z * kernelsL[l][3*72+6*9+5] +
        bl2.z * kernelsL[l][3*72+6*9+6] + bc2.z * kernelsL[l][3*72+6*9+7] + br2.z * kernelsL[l][3*72+6*9+8] + 

        tl2.w * kernelsL[l][3*72+7*9+0] + tc2.w * kernelsL[l][3*72+7*9+1] + tr2.w * kernelsL[l][3*72+7*9+2] +
        ml2.w * kernelsL[l][3*72+7*9+3] + mc2.w * kernelsL[l][3*72+7*9+4] + mr2.w * kernelsL[l][3*72+7*9+5] +
        bl2.w * kernelsL[l][3*72+7*9+6] + bc2.w * kernelsL[l][3*72+7*9+7] + br2.w * kernelsL[l][3*72+7*9+8] + biasL[l][3]
    ));
    float4 c5678 = RELU((float4)(
        tl1.x * kernelsL[l][4*72+0*9+0] + tc1.x * kernelsL[l][4*72+0*9+1] + tr1.x * kernelsL[l][4*72+0*9+2] +
        ml1.x * kernelsL[l][4*72+0*9+3] + mc1.x * kernelsL[l][4*72+0*9+4] + mr1.x * kernelsL[l][4*72+0*9+5] +
        bl1.x * kernelsL[l][4*72+0*9+6] + bc1.x * kernelsL[l][4*72+0*9+7] + br1.x * kernelsL[l][4*72+0*9+8] + 

        tl1.y * kernelsL[l][4*72+1*9+0] + tc1.y * kernelsL[l][4*72+1*9+1] + tr1.y * kernelsL[l][4*72+1*9+2] +
        ml1.y * kernelsL[l][4*72+1*9+3] + mc1.y * kernelsL[l][4*72+1*9+4] + mr1.y * kernelsL[l][4*72+1*9+5] +
        bl1.y * kernelsL[l][4*72+1*9+6] + bc1.y * kernelsL[l][4*72+1*9+7] + br1.y * kernelsL[l][4*72+1*9+8] + 

        tl1.z * kernelsL[l][4*72+2*9+0] + tc1.z * kernelsL[l][4*72+2*9+1] + tr1.z * kernelsL[l][4*72+2*9+2] +
        ml1.z * kernelsL[l][4*72+2*9+3] + mc1.z * kernelsL[l][4*72+2*9+4] + mr1.z * kernelsL[l][4*72+2*9+5] +
        bl1.z * kernelsL[l][4*72+2*9+6] + bc1.z * kernelsL[l][4*72+2*9+7] + br1.z * kernelsL[l][4*72+2*9+8] + 

        tl1.w * kernelsL[l][4*72+3*9+0] + tc1.w * kernelsL[l][4*72+3*9+1] + tr1.w * kernelsL[l][4*72+3*9+2] +
        ml1.w * kernelsL[l][4*72+3*9+3] + mc1.w * kernelsL[l][4*72+3*9+4] + mr1.w * kernelsL[l][4*72+3*9+5] +
        bl1.w * kernelsL[l][4*72+3*9+6] + bc1.w * kernelsL[l][4*72+3*9+7] + br1.w * kernelsL[l][4*72+3*9+8] +

        tl2.x * kernelsL[l][4*72+4*9+0] + tc2.x * kernelsL[l][4*72+4*9+1] + tr2.x * kernelsL[l][4*72+4*9+2] +
        ml2.x * kernelsL[l][4*72+4*9+3] + mc2.x * kernelsL[l][4*72+4*9+4] + mr2.x * kernelsL[l][4*72+4*9+5] +
        bl2.x * kernelsL[l][4*72+4*9+6] + bc2.x * kernelsL[l][4*72+4*9+7] + br2.x * kernelsL[l][4*72+4*9+8] + 

        tl2.y * kernelsL[l][4*72+5*9+0] + tc2.y * kernelsL[l][4*72+5*9+1] + tr2.y * kernelsL[l][4*72+5*9+2] +
        ml2.y * kernelsL[l][4*72+5*9+3] + mc2.y * kernelsL[l][4*72+5*9+4] + mr2.y * kernelsL[l][4*72+5*9+5] +
        bl2.y * kernelsL[l][4*72+5*9+6] + bc2.y * kernelsL[l][4*72+5*9+7] + br2.y * kernelsL[l][4*72+5*9+8] + 

        tl2.z * kernelsL[l][4*72+6*9+0] + tc2.z * kernelsL[l][4*72+6*9+1] + tr2.z * kernelsL[l][4*72+6*9+2] +
        ml2.z * kernelsL[l][4*72+6*9+3] + mc2.z * kernelsL[l][4*72+6*9+4] + mr2.z * kernelsL[l][4*72+6*9+5] +
        bl2.z * kernelsL[l][4*72+6*9+6] + bc2.z * kernelsL[l][4*72+6*9+7] + br2.z * kernelsL[l][4*72+6*9+8] + 

        tl2.w * kernelsL[l][4*72+7*9+0] + tc2.w * kernelsL[l][4*72+7*9+1] + tr2.w * kernelsL[l][4*72+7*9+2] +
        ml2.w * kernelsL[l][4*72+7*9+3] + mc2.w * kernelsL[l][4*72+7*9+4] + mr2.w * kernelsL[l][4*72+7*9+5] +
        bl2.w * kernelsL[l][4*72+7*9+6] + bc2.w * kernelsL[l][4*72+7*9+7] + br2.w * kernelsL[l][4*72+7*9+8] + biasL[l][4]
        ,
        tl1.x * kernelsL[l][5*72+0*9+0] + tc1.x * kernelsL[l][5*72+0*9+1] + tr1.x * kernelsL[l][5*72+0*9+2] +
        ml1.x * kernelsL[l][5*72+0*9+3] + mc1.x * kernelsL[l][5*72+0*9+4] + mr1.x * kernelsL[l][5*72+0*9+5] +
        bl1.x * kernelsL[l][5*72+0*9+6] + bc1.x * kernelsL[l][5*72+0*9+7] + br1.x * kernelsL[l][5*72+0*9+8] + 

        tl1.y * kernelsL[l][5*72+1*9+0] + tc1.y * kernelsL[l][5*72+1*9+1] + tr1.y * kernelsL[l][5*72+1*9+2] +
        ml1.y * kernelsL[l][5*72+1*9+3] + mc1.y * kernelsL[l][5*72+1*9+4] + mr1.y * kernelsL[l][5*72+1*9+5] +
        bl1.y * kernelsL[l][5*72+1*9+6] + bc1.y * kernelsL[l][5*72+1*9+7] + br1.y * kernelsL[l][5*72+1*9+8] + 

        tl1.z * kernelsL[l][5*72+2*9+0] + tc1.z * kernelsL[l][5*72+2*9+1] + tr1.z * kernelsL[l][5*72+2*9+2] +
        ml1.z * kernelsL[l][5*72+2*9+3] + mc1.z * kernelsL[l][5*72+2*9+4] + mr1.z * kernelsL[l][5*72+2*9+5] +
        bl1.z * kernelsL[l][5*72+2*9+6] + bc1.z * kernelsL[l][5*72+2*9+7] + br1.z * kernelsL[l][5*72+2*9+8] + 

        tl1.w * kernelsL[l][5*72+3*9+0] + tc1.w * kernelsL[l][5*72+3*9+1] + tr1.w * kernelsL[l][5*72+3*9+2] +
        ml1.w * kernelsL[l][5*72+3*9+3] + mc1.w * kernelsL[l][5*72+3*9+4] + mr1.w * kernelsL[l][5*72+3*9+5] +
        bl1.w * kernelsL[l][5*72+3*9+6] + bc1.w * kernelsL[l][5*72+3*9+7] + br1.w * kernelsL[l][5*72+3*9+8] +

        tl2.x * kernelsL[l][5*72+4*9+0] + tc2.x * kernelsL[l][5*72+4*9+1] + tr2.x * kernelsL[l][5*72+4*9+2] +
        ml2.x * kernelsL[l][5*72+4*9+3] + mc2.x * kernelsL[l][5*72+4*9+4] + mr2.x * kernelsL[l][5*72+4*9+5] +
        bl2.x * kernelsL[l][5*72+4*9+6] + bc2.x * kernelsL[l][5*72+4*9+7] + br2.x * kernelsL[l][5*72+4*9+8] + 

        tl2.y * kernelsL[l][5*72+5*9+0] + tc2.y * kernelsL[l][5*72+5*9+1] + tr2.y * kernelsL[l][5*72+5*9+2] +
        ml2.y * kernelsL[l][5*72+5*9+3] + mc2.y * kernelsL[l][5*72+5*9+4] + mr2.y * kernelsL[l][5*72+5*9+5] +
        bl2.y * kernelsL[l][5*72+5*9+6] + bc2.y * kernelsL[l][5*72+5*9+7] + br2.y * kernelsL[l][5*72+5*9+8] + 

        tl2.z * kernelsL[l][5*72+6*9+0] + tc2.z * kernelsL[l][5*72+6*9+1] + tr2.z * kernelsL[l][5*72+6*9+2] +
        ml2.z * kernelsL[l][5*72+6*9+3] + mc2.z * kernelsL[l][5*72+6*9+4] + mr2.z * kernelsL[l][5*72+6*9+5] +
        bl2.z * kernelsL[l][5*72+6*9+6] + bc2.z * kernelsL[l][5*72+6*9+7] + br2.z * kernelsL[l][5*72+6*9+8] + 

        tl2.w * kernelsL[l][5*72+7*9+0] + tc2.w * kernelsL[l][5*72+7*9+1] + tr2.w * kernelsL[l][5*72+7*9+2] +
        ml2.w * kernelsL[l][5*72+7*9+3] + mc2.w * kernelsL[l][5*72+7*9+4] + mr2.w * kernelsL[l][5*72+7*9+5] +
        bl2.w * kernelsL[l][5*72+7*9+6] + bc2.w * kernelsL[l][5*72+7*9+7] + br2.w * kernelsL[l][5*72+7*9+8] + biasL[l][5]
        ,
        tl1.x * kernelsL[l][6*72+0*9+0] + tc1.x * kernelsL[l][6*72+0*9+1] + tr1.x * kernelsL[l][6*72+0*9+2] +
        ml1.x * kernelsL[l][6*72+0*9+3] + mc1.x * kernelsL[l][6*72+0*9+4] + mr1.x * kernelsL[l][6*72+0*9+5] +
        bl1.x * kernelsL[l][6*72+0*9+6] + bc1.x * kernelsL[l][6*72+0*9+7] + br1.x * kernelsL[l][6*72+0*9+8] + 

        tl1.y * kernelsL[l][6*72+1*9+0] + tc1.y * kernelsL[l][6*72+1*9+1] + tr1.y * kernelsL[l][6*72+1*9+2] +
        ml1.y * kernelsL[l][6*72+1*9+3] + mc1.y * kernelsL[l][6*72+1*9+4] + mr1.y * kernelsL[l][6*72+1*9+5] +
        bl1.y * kernelsL[l][6*72+1*9+6] + bc1.y * kernelsL[l][6*72+1*9+7] + br1.y * kernelsL[l][6*72+1*9+8] + 

        tl1.z * kernelsL[l][6*72+2*9+0] + tc1.z * kernelsL[l][6*72+2*9+1] + tr1.z * kernelsL[l][6*72+2*9+2] +
        ml1.z * kernelsL[l][6*72+2*9+3] + mc1.z * kernelsL[l][6*72+2*9+4] + mr1.z * kernelsL[l][6*72+2*9+5] +
        bl1.z * kernelsL[l][6*72+2*9+6] + bc1.z * kernelsL[l][6*72+2*9+7] + br1.z * kernelsL[l][6*72+2*9+8] + 

        tl1.w * kernelsL[l][6*72+3*9+0] + tc1.w * kernelsL[l][6*72+3*9+1] + tr1.w * kernelsL[l][6*72+3*9+2] +
        ml1.w * kernelsL[l][6*72+3*9+3] + mc1.w * kernelsL[l][6*72+3*9+4] + mr1.w * kernelsL[l][6*72+3*9+5] +
        bl1.w * kernelsL[l][6*72+3*9+6] + bc1.w * kernelsL[l][6*72+3*9+7] + br1.w * kernelsL[l][6*72+3*9+8] +

        tl2.x * kernelsL[l][6*72+4*9+0] + tc2.x * kernelsL[l][6*72+4*9+1] + tr2.x * kernelsL[l][6*72+4*9+2] +
        ml2.x * kernelsL[l][6*72+4*9+3] + mc2.x * kernelsL[l][6*72+4*9+4] + mr2.x * kernelsL[l][6*72+4*9+5] +
        bl2.x * kernelsL[l][6*72+4*9+6] + bc2.x * kernelsL[l][6*72+4*9+7] + br2.x * kernelsL[l][6*72+4*9+8] + 

        tl2.y * kernelsL[l][6*72+5*9+0] + tc2.y * kernelsL[l][6*72+5*9+1] + tr2.y * kernelsL[l][6*72+5*9+2] +
        ml2.y * kernelsL[l][6*72+5*9+3] + mc2.y * kernelsL[l][6*72+5*9+4] + mr2.y * kernelsL[l][6*72+5*9+5] +
        bl2.y * kernelsL[l][6*72+5*9+6] + bc2.y * kernelsL[l][6*72+5*9+7] + br2.y * kernelsL[l][6*72+5*9+8] + 

        tl2.z * kernelsL[l][6*72+6*9+0] + tc2.z * kernelsL[l][6*72+6*9+1] + tr2.z * kernelsL[l][6*72+6*9+2] +
        ml2.z * kernelsL[l][6*72+6*9+3] + mc2.z * kernelsL[l][6*72+6*9+4] + mr2.z * kernelsL[l][6*72+6*9+5] +
        bl2.z * kernelsL[l][6*72+6*9+6] + bc2.z * kernelsL[l][6*72+6*9+7] + br2.z * kernelsL[l][6*72+6*9+8] + 

        tl2.w * kernelsL[l][6*72+7*9+0] + tc2.w * kernelsL[l][6*72+7*9+1] + tr2.w * kernelsL[l][6*72+7*9+2] +
        ml2.w * kernelsL[l][6*72+7*9+3] + mc2.w * kernelsL[l][6*72+7*9+4] + mr2.w * kernelsL[l][6*72+7*9+5] +
        bl2.w * kernelsL[l][6*72+7*9+6] + bc2.w * kernelsL[l][6*72+7*9+7] + br2.w * kernelsL[l][6*72+7*9+8] + biasL[l][6]
        ,
        tl1.x * kernelsL[l][7*72+0*9+0] + tc1.x * kernelsL[l][7*72+0*9+1] + tr1.x * kernelsL[l][7*72+0*9+2] +
        ml1.x * kernelsL[l][7*72+0*9+3] + mc1.x * kernelsL[l][7*72+0*9+4] + mr1.x * kernelsL[l][7*72+0*9+5] +
        bl1.x * kernelsL[l][7*72+0*9+6] + bc1.x * kernelsL[l][7*72+0*9+7] + br1.x * kernelsL[l][7*72+0*9+8] + 

        tl1.y * kernelsL[l][7*72+1*9+0] + tc1.y * kernelsL[l][7*72+1*9+1] + tr1.y * kernelsL[l][7*72+1*9+2] +
        ml1.y * kernelsL[l][7*72+1*9+3] + mc1.y * kernelsL[l][7*72+1*9+4] + mr1.y * kernelsL[l][7*72+1*9+5] +
        bl1.y * kernelsL[l][7*72+1*9+6] + bc1.y * kernelsL[l][7*72+1*9+7] + br1.y * kernelsL[l][7*72+1*9+8] + 

        tl1.z * kernelsL[l][7*72+2*9+0] + tc1.z * kernelsL[l][7*72+2*9+1] + tr1.z * kernelsL[l][7*72+2*9+2] +
        ml1.z * kernelsL[l][7*72+2*9+3] + mc1.z * kernelsL[l][7*72+2*9+4] + mr1.z * kernelsL[l][7*72+2*9+5] +
        bl1.z * kernelsL[l][7*72+2*9+6] + bc1.z * kernelsL[l][7*72+2*9+7] + br1.z * kernelsL[l][7*72+2*9+8] + 

        tl1.w * kernelsL[l][7*72+3*9+0] + tc1.w * kernelsL[l][7*72+3*9+1] + tr1.w * kernelsL[l][7*72+3*9+2] +
        ml1.w * kernelsL[l][7*72+3*9+3] + mc1.w * kernelsL[l][7*72+3*9+4] + mr1.w * kernelsL[l][7*72+3*9+5] +
        bl1.w * kernelsL[l][7*72+3*9+6] + bc1.w * kernelsL[l][7*72+3*9+7] + br1.w * kernelsL[l][7*72+3*9+8] +

        tl2.x * kernelsL[l][7*72+4*9+0] + tc2.x * kernelsL[l][7*72+4*9+1] + tr2.x * kernelsL[l][7*72+4*9+2] +
        ml2.x * kernelsL[l][7*72+4*9+3] + mc2.x * kernelsL[l][7*72+4*9+4] + mr2.x * kernelsL[l][7*72+4*9+5] +
        bl2.x * kernelsL[l][7*72+4*9+6] + bc2.x * kernelsL[l][7*72+4*9+7] + br2.x * kernelsL[l][7*72+4*9+8] + 

        tl2.y * kernelsL[l][7*72+5*9+0] + tc2.y * kernelsL[l][7*72+5*9+1] + tr2.y * kernelsL[l][7*72+5*9+2] +
        ml2.y * kernelsL[l][7*72+5*9+3] + mc2.y * kernelsL[l][7*72+5*9+4] + mr2.y * kernelsL[l][7*72+5*9+5] +
        bl2.y * kernelsL[l][7*72+5*9+6] + bc2.y * kernelsL[l][7*72+5*9+7] + br2.y * kernelsL[l][7*72+5*9+8] + 

        tl2.z * kernelsL[l][7*72+6*9+0] + tc2.z * kernelsL[l][7*72+6*9+1] + tr2.z * kernelsL[l][7*72+6*9+2] +
        ml2.z * kernelsL[l][7*72+6*9+3] + mc2.z * kernelsL[l][7*72+6*9+4] + mr2.z * kernelsL[l][7*72+6*9+5] +
        bl2.z * kernelsL[l][7*72+6*9+6] + bc2.z * kernelsL[l][7*72+6*9+7] + br2.z * kernelsL[l][7*72+6*9+8] + 

        tl2.w * kernelsL[l][7*72+7*9+0] + tc2.w * kernelsL[l][7*72+7*9+1] + tr2.w * kernelsL[l][7*72+7*9+2] +
        ml2.w * kernelsL[l][7*72+7*9+3] + mc2.w * kernelsL[l][7*72+7*9+4] + mr2.w * kernelsL[l][7*72+7*9+5] +
        bl2.w * kernelsL[l][7*72+7*9+6] + bc2.w * kernelsL[l][7*72+7*9+7] + br2.w * kernelsL[l][7*72+7*9+8] + biasL[l][7]
    ));

    write_imagef(tmpImgOut1, coord, c1234);
    write_imagef(tmpImgOut2, coord, c5678);
}

__kernel void convTranspose8To1(
    __read_only image2d_t tmpImgIn1,
    __read_only image2d_t tmpImgIn2, 
    __write_only image2d_t dstImg)
{
    const int x = get_global_id(0), y = get_global_id(1);
    if(x >= get_image_width(dstImg) || y >= get_image_height(dstImg))
        return;

    int2 coord = (int2)(x, y);

    float4 mc1 = read_imagef(tmpImgIn1, samplerN, (int2)(x / 2, y / 2));
    float4 mc2 = read_imagef(tmpImgIn2, samplerN, (int2)(x / 2, y / 2));

    int2 pos = (int2)(x & 1, y & 1);
    int flag = 0;

    if (pos.x == 0 && pos.y != 0)
        flag = 0;
        //0 x
        //0 0
    else if (pos.x == 0 && pos.y == 0)
        flag = 1;
        //0 0
        //0 x
    else if (pos.x != 0 && pos.y == 0)
        flag = 2;
        //0 0
        //x 0
    else if (pos.x != 0 && pos.y != 0)
        flag = 3;
        //x 0
        //0 0

        //180 degree rotation for kernel
        //0 1  to  3 2
        //2 3      1 0
    float4 c;
    float tmp;
    switch(flag)
    {
    case 0:
        tmp = clamp(
            mc1.x * kernelsL10[0*4+2] +
            mc1.y * kernelsL10[1*4+2] +
            mc1.z * kernelsL10[2*4+2] +
            mc1.w * kernelsL10[3*4+2] +
            mc2.x * kernelsL10[4*4+2] +
            mc2.y * kernelsL10[5*4+2] +
            mc2.z * kernelsL10[6*4+2] +
            mc2.w * kernelsL10[7*4+2], 0.0f, 1.0f);
        
        c = (float4)(tmp, tmp, tmp, 1.0f);
        break;
    case 1:
        tmp = clamp(
            mc1.x * kernelsL10[0*4+0] +
            mc1.y * kernelsL10[1*4+0] +
            mc1.z * kernelsL10[2*4+0] +
            mc1.w * kernelsL10[3*4+0] +
            mc2.x * kernelsL10[4*4+0] +
            mc2.y * kernelsL10[5*4+0] +
            mc2.z * kernelsL10[6*4+0] +
            mc2.w * kernelsL10[7*4+0], 0.0f, 1.0f);

        c = (float4)(tmp, tmp, tmp, 1.0f);
        break;
    case 2:
        tmp = clamp(
            mc1.x * kernelsL10[0*4+1] +
            mc1.y * kernelsL10[1*4+1] +
            mc1.z * kernelsL10[2*4+1] +
            mc1.w * kernelsL10[3*4+1] +
            mc2.x * kernelsL10[4*4+1] +
            mc2.y * kernelsL10[5*4+1] +
            mc2.z * kernelsL10[6*4+1] +
            mc2.w * kernelsL10[7*4+1], 0.0f, 1.0f);
            
        c = (float4)(tmp, tmp, tmp, 1.0f);
        break;
    case 3:
        tmp = clamp(
            mc1.x * kernelsL10[0*4+3] +
            mc1.y * kernelsL10[1*4+3] +
            mc1.z * kernelsL10[2*4+3] +
            mc1.w * kernelsL10[3*4+3] +
            mc2.x * kernelsL10[4*4+3] +
            mc2.y * kernelsL10[5*4+3] +
            mc2.z * kernelsL10[6*4+3] +
            mc2.w * kernelsL10[7*4+3], 0.0f, 1.0f);
            
        c = (float4)(tmp, tmp, tmp, 1.0f);
        break;
    }

    write_imagef(dstImg, coord, c);
}
